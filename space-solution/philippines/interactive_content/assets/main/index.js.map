{"version":3,"sources":["../../file:/Users/blues/Documents/Panasonic/PanasonicCocos/assets/Script/maou/asset/cache/file:/Users/blues/Documents/Panasonic/PanasonicCocos/assets/Script/maou/asset/cache/AssetCache.ts","../../file:/Users/blues/Documents/Panasonic/PanasonicCocos/assets/Script/maou/asset/loader/file:/Users/blues/Documents/Panasonic/PanasonicCocos/assets/Script/maou/asset/loader/AssetLoader.ts","../../file:/Users/blues/Documents/Panasonic/PanasonicCocos/assets/Script/maou/asset/file:/Users/blues/Documents/Panasonic/PanasonicCocos/assets/Script/maou/asset/AssetManager.ts","../../file:/Users/blues/Documents/Panasonic/PanasonicCocos/assets/Script/maou/asset/cache/file:/Users/blues/Documents/Panasonic/PanasonicCocos/assets/Script/maou/asset/cache/AtlasCache.ts","../../file:/Users/blues/Documents/Panasonic/PanasonicCocos/assets/Script/maou/asset/loader/file:/Users/blues/Documents/Panasonic/PanasonicCocos/assets/Script/maou/asset/loader/AtlasLoader.ts","../../file:/Users/blues/Documents/Panasonic/PanasonicCocos/assets/Script/maou/asset/cache/file:/Users/blues/Documents/Panasonic/PanasonicCocos/assets/Script/maou/asset/cache/BaseCache.ts","../../file:/Users/blues/Documents/Panasonic/PanasonicCocos/assets/Script/section/file:/Users/blues/Documents/Panasonic/PanasonicCocos/assets/Script/section/BaseSectionComponent.ts","../../file:/Users/blues/Documents/Panasonic/PanasonicCocos/assets/Script/maou/asset/loader/file:/Users/blues/Documents/Panasonic/PanasonicCocos/assets/Script/maou/asset/loader/BinaryLoader.ts","../../file:/Users/blues/Documents/Panasonic/PanasonicCocos/assets/Script/section/file:/Users/blues/Documents/Panasonic/PanasonicCocos/assets/Script/section/BoardSectionComponent.ts","../../file:/Users/blues/Documents/Panasonic/PanasonicCocos/assets/Script/maou/asset/cache/file:/Users/blues/Documents/Panasonic/PanasonicCocos/assets/Script/maou/asset/cache/BufferCache.ts","../../file:/Users/blues/Documents/Panasonic/PanasonicCocos/assets/Script/maou/util/file:/Users/blues/Documents/Panasonic/PanasonicCocos/assets/Script/maou/util/ByteArray.ts","../../file:/Users/blues/Documents/Panasonic/PanasonicCocos/assets/Script/maou/util/file:/Users/blues/Documents/Panasonic/PanasonicCocos/assets/Script/maou/util/Decorators.ts","../../file:/Users/blues/Documents/Panasonic/PanasonicCocos/assets/Script/section/file:/Users/blues/Documents/Panasonic/PanasonicCocos/assets/Script/section/EndingSection3Component.ts","../../file:/Users/blues/Documents/Panasonic/PanasonicCocos/assets/Script/section/file:/Users/blues/Documents/Panasonic/PanasonicCocos/assets/Script/section/EndingSectionComponent.ts","../../file:/Users/blues/Documents/Panasonic/PanasonicCocos/assets/Script/maou/asset/loader/file:/Users/blues/Documents/Panasonic/PanasonicCocos/assets/Script/maou/asset/loader/EnumLoader.ts","../../file:/Users/blues/Documents/Panasonic/PanasonicCocos/assets/Script/maou/event/file:/Users/blues/Documents/Panasonic/PanasonicCocos/assets/Script/maou/event/EventCenter.ts","../../file:/Users/blues/Documents/Panasonic/PanasonicCocos/assets/Script/maou/event/file:/Users/blues/Documents/Panasonic/PanasonicCocos/assets/Script/maou/event/EventDispatcher.ts","../../file:/Users/blues/Documents/Panasonic/PanasonicCocos/assets/Script/section/file:/Users/blues/Documents/Panasonic/PanasonicCocos/assets/Script/section/FullVideoSectionComponent.ts","../../file:/Users/blues/Documents/Panasonic/PanasonicCocos/assets/Script/manager/file:/Users/blues/Documents/Panasonic/PanasonicCocos/assets/Script/manager/GameManager.ts","../../file:/Users/blues/Documents/Panasonic/PanasonicCocos/assets/Script/maou/util/file:/Users/blues/Documents/Panasonic/PanasonicCocos/assets/Script/maou/util/Handler.ts","../../file:/Users/blues/Documents/Panasonic/PanasonicCocos/assets/Script/maou/asset/loader/file:/Users/blues/Documents/Panasonic/PanasonicCocos/assets/Script/maou/asset/loader/ImageLoader.ts","../../file:/Users/blues/Documents/Panasonic/PanasonicCocos/assets/Script/file:/Users/blues/Documents/Panasonic/PanasonicCocos/assets/Script/Index.ts","../../file:/Users/blues/Documents/Panasonic/PanasonicCocos/assets/Script/maou/asset/cache/file:/Users/blues/Documents/Panasonic/PanasonicCocos/assets/Script/maou/asset/cache/JsonCache.ts","../../file:/Users/blues/Documents/Panasonic/PanasonicCocos/assets/Script/maou/asset/loader/file:/Users/blues/Documents/Panasonic/PanasonicCocos/assets/Script/maou/asset/loader/JsonLoader.ts","../../file:/Users/blues/Documents/Panasonic/PanasonicCocos/assets/Script/manager/file:/Users/blues/Documents/Panasonic/PanasonicCocos/assets/Script/manager/LayerManager.ts","../../file:/Users/blues/Documents/Panasonic/PanasonicCocos/assets/Script/maou/asset/loader/file:/Users/blues/Documents/Panasonic/PanasonicCocos/assets/Script/maou/asset/loader/LoaderVO.ts","../../file:/Users/blues/Documents/Panasonic/PanasonicCocos/assets/Script/maou/asset/events/file:/Users/blues/Documents/Panasonic/PanasonicCocos/assets/Script/maou/asset/events/LoadEvent.ts","../../file:/Users/blues/Documents/Panasonic/PanasonicCocos/assets/Script/maou/asset/loader/file:/Users/blues/Documents/Panasonic/PanasonicCocos/assets/Script/maou/asset/loader/LoadTask.ts","../../file:/Users/blues/Documents/Panasonic/PanasonicCocos/assets/Script/maou/core/file:/Users/blues/Documents/Panasonic/PanasonicCocos/assets/Script/maou/core/MaouCommand.ts","../../file:/Users/blues/Documents/Panasonic/PanasonicCocos/assets/Script/maou/core/file:/Users/blues/Documents/Panasonic/PanasonicCocos/assets/Script/maou/core/MaouController.ts","../../file:/Users/blues/Documents/Panasonic/PanasonicCocos/assets/Script/maou/core/file:/Users/blues/Documents/Panasonic/PanasonicCocos/assets/Script/maou/core/MaouCore.ts","../../file:/Users/blues/Documents/Panasonic/PanasonicCocos/assets/Script/maou/event/file:/Users/blues/Documents/Panasonic/PanasonicCocos/assets/Script/maou/event/MaouEvent.ts","../../file:/Users/blues/Documents/Panasonic/PanasonicCocos/assets/Script/common/file:/Users/blues/Documents/Panasonic/PanasonicCocos/assets/Script/common/MovieClip.ts","../../file:/Users/blues/Documents/Panasonic/PanasonicCocos/assets/Script/maou/asset/cache/file:/Users/blues/Documents/Panasonic/PanasonicCocos/assets/Script/maou/asset/cache/PrefabDataCache.ts","../../file:/Users/blues/Documents/Panasonic/PanasonicCocos/assets/Script/maou/asset/loader/file:/Users/blues/Documents/Panasonic/PanasonicCocos/assets/Script/maou/asset/loader/PrefabLoader.ts","../../file:/Users/blues/Documents/Panasonic/PanasonicCocos/assets/Script/section/file:/Users/blues/Documents/Panasonic/PanasonicCocos/assets/Script/section/PressSectionComponent.ts","../../file:/Users/blues/Documents/Panasonic/PanasonicCocos/assets/Script/maou/core/file:/Users/blues/Documents/Panasonic/PanasonicCocos/assets/Script/maou/core/RenderManager.ts","../../file:/Users/blues/Documents/Panasonic/PanasonicCocos/assets/Script/manager/file:/Users/blues/Documents/Panasonic/PanasonicCocos/assets/Script/manager/SectionManager.ts","../../file:/Users/blues/Documents/Panasonic/PanasonicCocos/assets/Script/data/file:/Users/blues/Documents/Panasonic/PanasonicCocos/assets/Script/data/SectionVO.ts","../../file:/Users/blues/Documents/Panasonic/PanasonicCocos/assets/Script/maou/asset/cache/file:/Users/blues/Documents/Panasonic/PanasonicCocos/assets/Script/maou/asset/cache/SkeletonDataCache.ts","../../file:/Users/blues/Documents/Panasonic/PanasonicCocos/assets/Script/maou/asset/loader/file:/Users/blues/Documents/Panasonic/PanasonicCocos/assets/Script/maou/asset/loader/SkeletonLoader.ts","../../file:/Users/blues/Documents/Panasonic/PanasonicCocos/assets/Script/section/file:/Users/blues/Documents/Panasonic/PanasonicCocos/assets/Script/section/SliderSectionComponent.ts","../../file:/Users/blues/Documents/Panasonic/PanasonicCocos/assets/Script/maou/asset/cache/file:/Users/blues/Documents/Panasonic/PanasonicCocos/assets/Script/maou/asset/cache/SpriteFrameCache.ts","../../file:/Users/blues/Documents/Panasonic/PanasonicCocos/assets/Script/maou/asset/events/file:/Users/blues/Documents/Panasonic/PanasonicCocos/assets/Script/maou/asset/events/TaskEvent.ts","../../file:/Users/blues/Documents/Panasonic/PanasonicCocos/assets/Script/maou/util/file:/Users/blues/Documents/Panasonic/PanasonicCocos/assets/Script/maou/util/Utils.ts","../../file:/Users/blues/Documents/Panasonic/PanasonicCocos/assets/Script/manager/file:/Users/blues/Documents/Panasonic/PanasonicCocos/assets/Script/manager/ValueManager.ts","../../file:/Users/blues/Documents/Panasonic/PanasonicCocos/assets/Script/maou/asset/cache/file:/Users/blues/Documents/Panasonic/PanasonicCocos/assets/Script/maou/asset/cache/VideoCache.ts","../../file:/Users/blues/Documents/Panasonic/PanasonicCocos/assets/Script/maou/asset/loader/file:/Users/blues/Documents/Panasonic/PanasonicCocos/assets/Script/maou/asset/loader/VideoLoader.ts","../../file:/Users/blues/Documents/Panasonic/PanasonicCocos/assets/Script/section/file:/Users/blues/Documents/Panasonic/PanasonicCocos/assets/Script/section/VideoSectionComponent.ts"],"names":["_activeMap","_inertiaMap","Map","RenderManager","me","addCallback","this","_renderDispose","destroy","forEach","cache","clear","removeCallback","setRes","url","obj","set","getRes","get","has","setActive","getOnce","setInertia","renewal","lifeTime","curTime","checkRes","getSpriteFrame","getPrefab","getSkeleton","getJson","getAtlas","getBuffer","getVideo","disposeAll","disposeCache","clearAll","clearTime","keys","Array","from","i","length","disposeFromCache","ret","vo","console","log","LoaderConfig","MAX_LIFE_TIME","maxConnection","retryTimes","retryDelay","_cache","_taskMap","_voMap","_queueList","_maxLoader","_connCounter","_retryTimes","_retryDelay","addRender","onRender","dt","frame","time","loadNext","cancel","taskId","task","load","thisObj","onComplete","onError","onProgress","fileType","property","immediately","ePriority","UI","LoadTask","Create","addEventListener","TaskEvent","FINISH","onTaskFinish","insertLoad","attachToLoaderVO","id","checkThenComplete","loadGroup","urls","shift","status","eLoaderStatus","READY","_doLoad","loader","getFileType","eFileType","JPG","JPEG","PNG","loadType","eLoaderType","IMAGE","ImageLoader","PREFAB","PrefabLoader","SKELETON","SkeletonLoader","ATLAS","AtlasLoader","JSON","JsonLoader","BIN","BUFFER","BinaryLoader","MP4","VIDEO","VideoLoader","setProgress","startLoadTime","tryTimes","onLoadComplete","evt","target","counter","spriteFrameCache","CacheWarp","SpriteFrameCache","finalLoadURL","content","prefabCache","PrefabDataCache","skeletonCache","SkeletonDataCache","jsonCache","JsonCache","atlasCache","AtlasCache","bufferCache","BufferCache","videoCache","VideoCache","checkTask","assetManager","releaseAsset","recycleVO","onLoadFail","reuse","_this","push","Recycle","LOADING","idx","_this2","indexOf","splice","LoaderVO","hasRes","LoadEvent","COMPLETE","FAIL","len","index","item","value","Math","max","_loader","AssetCache","AssetLoader","GAMING_CONNECTION","LOAD_FAILED_TRY_TIMES","_me","AssetManager","name","data","addRef","decRef","_data","SpriteAtlas","resources","release","_finalURL","_isDisposed","refCount","BaseCache","path","finished","total","err","error","fail","complete","result","apply","arguments","dispose","finalURL","_url","_ref","ccclass","_decorator","_vo","_evtDispatcher","isBackRun","EventDispatcher","setData","resource","dispatchEvent","MaouEvent","BaseSectionComponent","EventType","Loaded","onLoaded","show","container","node","parent","run","onBack","clickNext","Next","event","dispatchEventWith","type","listener","priority","once","removeEventListener","removeAll","hasEventListener","removeTargetListener","GameManager","valueManager","sectionManger","Component","BufferAsset","Node","Sprite","_curBtnIdx","_curItemId","_isOpen","_isDraged","_cacheMap","start","dragNode","active","dragText","openItemId","setBoardFlag","items","itemvo","_getBigImage","bigImage","fridgeBase","position","v3","fridgeTray","hotPoint","_getCurItem","spriteFrame","_endSection","_updateButon","_registerEvent","_unRegisterEvent","clickOpenTray","tween","to","easing","disable","_this3","getBoardFlag","btnNode","getChildByName","_this4","on","TOUCH_START","onBtnTouchStart","_this5","targetOff","currentTarget","Number","split","itemVO","TOUCH_MOVE","onTouchMove","TOUCH_END","onTouchEnd","TOUCH_CANCEL","posV3","localUI","getUILocation","uiSpaceWorldPos","x","y","getComponent","UITransform","convertToNodeSpaceAR","dragIcon","dragConf","setContentSize","size","width","height","dragBg","showBg","call","_this6","btn","pos","convertToWorldSpaceAR","waitTime","_this7","curItemId","add3f","getUIDelta","cb","_this8","clickSwitch","arg","parse","hide","nodeName","_this9","getChildByPath","getByteArray","ByteArray","buffer","Endian","LITTLE_ENDIAN","BIG_ENDIAN","bufferExtSize","_bytes","_position","write_position","$endian","EOF_byte","EOF_code_point","bytes","wpos","uint8","Uint8Array","byteLength","DataView","endian","setArrayBuffer","_validateBuffer","tmp","be","ArrayBuffer","readBoolean","validate","ByteArraySize","readByte","getInt8","readBytes","offset","available","validateBuffer","subarray","readDouble","getFloat64","EndianConst","readFloat","getFloat32","readInt","getInt32","readShort","getInt16","readUnsignedByte","readUnsignedInt","getUint32","readUnsignedShort","getUint16","readUTF","readUTFBytes","byteOffset","decodeUTF8","writeBoolean","writeByte","writeBytes","writeLength","min","writeDouble","setFloat64","writeFloat","setFloat32","writeInt","setInt32","writeShort","setInt16","writeUnsignedInt","setUint32","writeUnsignedShort","setUint16","writeUTF","utf8bytes","encodeUTF8","_writeUint8Array","writeUTFBytes","toString","bytesAvailable","npos","bl","str","codePoints","stringToCodePoints","outputBytes","code_point","inRange","encoderError","count","div","pow","temp","fatal","utf8_code_point","utf8_bytes_needed","utf8_bytes_seen","utf8_lower_boundary","_byte","decoderError","cp","lower_boundary","String","fromCharCode","opt_code_point","a","n","d","floor","string","cps","c","charCodeAt","b","slice","constructor","btnNext","btnBack","image","getItemIndex","boardSectionId","clickHome","sectionVO","sectionManager","getSection","map","key","clickWatchVideo","videoUrls","window","open","SGIN_TYPE_DOT","$singleton","Symbol","symbol","Error","_EventDispatcher","Register","Unregister","Send","EventCenter","Listener","fn","_target","_listenerMap","concat","_addEventListener","listeners","sort","evtTypes","evtType","j","videoEle","document","createElement","src","body","appendChild","style","loop","oncanplay","play","self","showHtmlNextBtn","showLogo","showText","hideHtmlNextBtn","hideLogo","hideText","hideVideo","clickCallback","imgEle","getElementById","visibility","onclick","currentSrc","scale","clientWidth","videoEleWidth","videoEleHeight","right","bottom","clientHeight","top","removeChild","ele","_valueManager","_sectionManager","_layerManager","_htmlBG","_htmlCloseBtn","_htmlNextBtn","_htmlBackBtn","_gameFrame","ValueManager","SectionManager","LayerManager","showHtmlCloseBtn","close","hideHtmlCloseBtn","showHtmlBg","hideHtmlBg","location","hostname","gameDiv","gameDivWidth","zIndex","hideGame","showGame","showHtmlBackBtn","hideHtmlBackBtn","_instance","Handler","caller","method","args","_id","setTo","_gid","recover","runWith","_pool","create","SpriteFrame","Camera","MaouCore","Reset","layerManager","init","canvas","enter","JsonAsset","json","mainContainer","sceneNode","_status","_progress","_content","_error","longTimeTag","_path","DISPOSE","v","PROGRESS","COMPLETED","CHECK_TASK","Utils","getFileExtension","GetLoaderVO","_loaderVOPool","getPath","_MaouEvent","onCompleteHandler","onProgressHandler","onErrorHandler","_voList","_removeEvent","warn","CANCLE","_addEvent","isComplete","_canComplete","_finish","_hasFail","failVO","_getFailVO","onLoadProgress","progress","calculateProgress","sum","onCompleteFun","onProgressFun","onErrorFun","_loadTaskPool","_idCounter","CommandState","CommandEvent","classname","ERROR","state","None","Call","finish","getController","getResources","getName","check","Promise","resolve","reject","paths","Ready","Load","Progreess","loadP","onLoad","commands","command","Instance","update","checkCommand","onDestroy","addComponent","game","addPersistRootNode","reset","Finish","directCall","nextCommand","Controllers","clone","stringify","EventClass","eventPool","_sprite","_pos","_pos0","_frames","_curFrame","_frameLen","_timeTotal","_frameGap","spriteAtlas","getSpriteFrames","getPosition","frameRate","deltaTime","sp","gotoAndPlay","createNode","instantiate","Prefab","Animation","area","onTouchStart","anim","FINISHED","onFinish","getState","isPlaying","resume","pause","_curTime","_preFrameTime","_lastTime","_frameCount","_renderList","_callbackList","Date","now","rendeRender","rendeCallback","num","delay","hasCallback","callback","lastTime","curNum","some","removeCallbackTarget","hasRender","removeRender","render","addTime","parseInt","_curSection","_curSectionPrefabCache","_sectionMap","_entering","_history","_isBack","BaseSectionVO","boardSectionVO","BoardSectionVO","icon","iconDisable","videoVO","VideoSectionVO","itemId","videoPath","endSectionVO","EndingSectionVO","sectionId","oldSection","sectionNode","newSection","_next","enterHome","enterBoard","clearBoardFlag","then","pop","Skeleton","skeletonData","layer","SkeletonData","MovieClip","_leftW","_rightW","block","leftNode","rightNode","setValue","dragBtn","curFrame","_extReg","lastIndex","lastIndexOf","exec","toLowerCase","_valueMap","flag","board","VideoClip","VideoPlayer","videoPlayer","remoteURL","onVideoPlayerEvent","player","READY_TO_PLAY"],"mappings":"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","file":"all.js","sourcesContent":["/*\n * @Author: Blues\n * @Date: 2021-11-11 17:44:25\n * @LastEditTime: 2021-11-19 15:08:58\n * @LastEditors: Blues\n * @Description:\n */\n\nimport { RenderManager } from '../../core/RenderManager'\nimport { LoaderConfig } from '../loader/EnumLoader'\nimport AtlasCache from './AtlasCache'\nimport BaseCache from './BaseCache'\nimport BufferCache from './BufferCache'\nimport JsonCache from './JsonCache'\nimport PrefabDataCache from './PrefabDataCache'\nimport SkeletonDataCache from './SkeletonDataCache'\nimport SpriteFrameCache from './SpriteFrameCache'\nimport VideoCache from './VideoCache'\n\nexport class AssetCache {\n    /** 存放活跃的资源 */\n    private _activeMap: Map<string, BaseCache> = null\n    /** 存放计数为0的资源 */\n    private _inertiaMap: Map<string, BaseCache> = null\n\n    constructor() {\n        this._activeMap = new Map()\n        this._inertiaMap = new Map()\n        RenderManager.me.addCallback(this, this._renderDispose, 0, 5000) // 每个5秒检测一次惰性资源\n    }\n\n    public destroy() {\n        if (this._activeMap) {\n            this._activeMap.forEach((cache) => {\n                cache.destroy()\n            }, this)\n            this._activeMap.clear()\n            this._activeMap = null\n        }\n\n        if (this._inertiaMap) {\n            this._inertiaMap.forEach((cache) => {\n                cache.destroy()\n            }, this)\n            this._inertiaMap.clear()\n            this._inertiaMap = null\n        }\n        RenderManager.me.removeCallback(this._renderDispose)\n    }\n\n    public setRes(url: string, obj: BaseCache): void {\n        this._activeMap.set(url, obj)\n    }\n\n    /**\n     * 通过链接获取资源\n     * 特别注意，当资源存在时，会自动给资源引用+1\n     * 如果仅仅是为了验证资源是否存在，请使用 checkRes\n     *\n     * @param {string} url\n     * @returns {BaseCache}\n     */\n    public getRes(url: string): BaseCache {\n        let cache = this._activeMap.get(url)\n        if (cache == null && this._inertiaMap.has(url)) {\n            cache = this._inertiaMap.get(url)\n            this.setActive(cache)\n        }\n        cache.getOnce()\n        return cache\n    }\n\n    /** 放入活跃字典*/\n    public setActive(cache: BaseCache): void {\n        if (this._inertiaMap != null && cache != null) {\n            this._inertiaMap.delete(cache.url)\n            this._activeMap.set(cache.url, cache)\n        }\n    }\n\n    /** 放入惰性字典*/\n    public setInertia(cache: BaseCache): void {\n        if (this._activeMap != null && cache != null) {\n            this._activeMap.delete(cache.url)\n            this._inertiaMap.set(cache.url, cache)\n\n            this.renewal(cache.url)\n        }\n    }\n\n    /** 延长一个生命周期 */\n    public renewal(url: string): void {\n        let cache = this._inertiaMap.get(url)\n        if (cache) {\n            cache.lifeTime = RenderManager.me.curTime\n        }\n    }\n\n    public checkRes(url: string): boolean {\n        return this._activeMap.has(url) || this._inertiaMap.has(url)\n    }\n\n    /** 取得SpriteFrame资源*/\n    public getSpriteFrame(url: string): SpriteFrameCache {\n        return this.getRes(url) as SpriteFrameCache\n    }\n\n    /** 取得预制体资源*/\n    public getPrefab(url: string): PrefabDataCache {\n        return this.getRes(url) as PrefabDataCache\n    }\n\n    /** 获得骨骼资源 */\n    public getSkeleton(url: string): SkeletonDataCache {\n        return this.getRes(url) as SkeletonDataCache\n    }\n\n    /** 获得json资源 */\n    public getJson(url: string): JsonCache {\n        return this.getRes(url) as JsonCache\n    }\n\n    /** 获得图集资源 */\n    public getAtlas(url: string): AtlasCache {\n        return this.getRes(url) as AtlasCache\n    }\n\n    /** 获得二进制文件资源 */\n    public getBuffer(url: string): BufferCache {\n        return this.getRes(url) as BufferCache\n    }\n\n    public getVideo(url: string): VideoCache {\n        return this.getRes(url) as VideoCache\n    }\n\n    /** 释放清理全部惰性资源 */\n    public disposeAll() {\n        this.disposeCache(true, 0)\n    }\n\n    /**\n     *\n     * @param clearAll 释放清理全部惰性资源\n     * @param curTime\n     * @param clearTime 举例：如果clearTime = 60000，就会清理 curTime 之前一分钟的资源\n     */\n    public disposeCache(clearAll: boolean, curTime: number, clearTime: number = 60000): void {\n        let keys = Array.from(this._inertiaMap.keys())\n        for (let i = 0; i < keys.length; i++) {\n            const url = keys[i]\n            const cache = this._inertiaMap.get(url)\n            if (cache) {\n                if (clearAll || curTime - cache.lifeTime >= clearTime) {\n                    this.disposeFromCache(url)\n                }\n            }\n        }\n    }\n\n    /**\n     * 立即从缓存里清除和释放资源\n     * @param url\n     *\n     */\n    public disposeFromCache(url: string): boolean {\n        let ret: boolean\n        let vo = this._activeMap.get(url)\n        if (vo == null) {\n            vo = this._inertiaMap.get(url)\n        }\n        if (vo) {\n            ret = true\n            vo.destroy()\n            console.log('| -------disposeFromCache:', url)\n            this._activeMap.delete(url)\n            this._inertiaMap.delete(url)\n        }\n        return ret\n    }\n\n    private _renderDispose(): void {\n        let curTime: number = RenderManager.me.curTime\n        this.disposeCache(false, curTime, LoaderConfig.MAX_LIFE_TIME)\n    }\n}\n","/*\n * @Author: Blues\n * @Date: 2021-11-11 14:10:02\n * @LastEditTime: 2022-01-07 18:54:48\n * @LastEditors: Blues\n * @Description:\n */\n\nimport { Asset, assetManager } from 'cc'\nimport { IRender, RenderManager } from '../../core/RenderManager'\nimport { AssetCache } from '../cache/AssetCache'\nimport AtlasCache from '../cache/AtlasCache'\nimport { CacheWarp } from '../cache/BaseCache'\nimport BufferCache from '../cache/BufferCache'\nimport JsonCache from '../cache/JsonCache'\nimport PrefabDataCache from '../cache/PrefabDataCache'\nimport SkeletonDataCache from '../cache/SkeletonDataCache'\nimport SpriteFrameCache from '../cache/SpriteFrameCache'\nimport VideoCache from '../cache/VideoCache'\nimport LoadEvent from '../events/LoadEvent'\nimport TaskEvent from '../events/TaskEvent'\nimport AtlasLoader from './AtlasLoader'\nimport BinaryLoader from './BinaryLoader'\nimport { eFileType, eLoaderStatus, eLoaderType, ePriority } from './EnumLoader'\nimport { ILoader } from './ILoader'\nimport ImageLoader from './ImageLoader'\nimport JsonLoader from './JsonLoader'\nimport LoaderVO from './LoaderVO'\nimport LoadTask from './LoadTask'\nimport PrefabLoader from './PrefabLoader'\nimport SkeletonLoader from './SkeletonLoader'\nimport VideoLoader from './VideoLoader'\n\nexport class AssetLoader implements IRender {\n    private _cache: AssetCache = null\n    private _taskMap: Map<number, LoadTask> = null\n    private _voMap: Map<string, LoaderVO> = null\n    private _queueList: Array<string> = null\n    private _maxLoader: number = 1\n    private _connCounter: number = 0\n    private _retryTimes: number = 1\n    private _retryDelay: number = 500\n\n    constructor(cache: AssetCache, maxConnection: number = 1, retryTimes: number = 1, retryDelay: number = 500) {\n        this._cache = cache\n        this._taskMap = new Map()\n        this._voMap = new Map()\n        this._queueList = []\n        this.maxConnection = maxConnection\n        this._retryTimes = retryTimes\n        this._retryDelay = retryDelay\n\n        RenderManager.me.addRender(this)\n    }\n\n    onRender(dt: number, frame: number, time: number): void {\n        this.loadNext()\n    }\n\n    /**\n     * 设置同时加载的最大线程\n     * @param value\n     *\n     */\n    public set maxConnection(value: number) {\n        this._maxLoader = Math.max(1, value)\n    }\n\n    /**\n     * 同时加载的最大线程\n     * @return\n     *\n     */\n    public get maxConnection(): number {\n        return this._maxLoader\n    }\n\n    /**\n     * 取消任务\n     * @param taskId\n     * @returns\n     */\n    public cancel(taskId: number): void {\n        const task = this._taskMap.get(taskId)\n        if (!task) {\n            return\n        }\n        task.cancel()\n    }\n\n    /**\n     * 加载单个资源\n     * @param url\n     * @param thisObj\n     * @param onComplete\n     * @param onProgress\n     * @param onError\n     * @param fileType 文件类型\n     * @param property 优先级\n     * @param immediately 是否立即执行\n     * @returns 加载任务id，用于取消加载\n     */\n    public load(\n        url: string,\n        thisObj: object = null,\n        onComplete: () => void = null,\n        onError: (err: Error) => void = null,\n        onProgress: (progress: number) => void = null,\n        fileType: string = '',\n        property: number = ePriority.UI,\n        immediately: boolean = false\n    ): number {\n        const task = LoadTask.Create(thisObj, onComplete, onProgress, onError)\n        task.addEventListener(TaskEvent.FINISH, this.onTaskFinish, this)\n        const vo = this.insertLoad(url, property)\n        if (vo) {\n            vo.fileType = fileType\n            task.attachToLoaderVO(vo)\n        }\n        this._taskMap.set(task.id, task)\n        task.checkThenComplete() // 如果已经存在缓存，会立即complete\n\n        if (immediately) {\n            this.loadNext()\n        }\n        return task.id\n    }\n\n    public loadGroup(\n        urls: string[],\n        thisObj: object = null,\n        onComplete: () => void = null,\n        onError: (err: Error) => void = null,\n        onProgress: (progress: number) => void = null,\n        property: number = ePriority.UI,\n        immediately: boolean = false\n    ): number {\n        const task = LoadTask.Create(thisObj, onComplete, onProgress, onError)\n        task.addEventListener(TaskEvent.FINISH, this.onTaskFinish, this)\n        for (let i = 0; i < urls.length; i++) {\n            const vo = this.insertLoad(urls[i], property)\n            if (vo) {\n                task.attachToLoaderVO(vo)\n            }\n        }\n        this._taskMap.set(task.id, task)\n        task.checkThenComplete() // 如果已经存在缓存，会立即complete\n\n        if (immediately) {\n            this.loadNext()\n        }\n        return task.id\n    }\n\n    protected loadNext(): void {\n        while (this._queueList.length > 0 && this._connCounter < this._maxLoader) {\n            let url: string = this._queueList.shift()\n            let vo: LoaderVO = this._voMap.get(url)\n            if (vo && vo.status == eLoaderStatus.READY) {\n                this._doLoad(vo)\n                this._connCounter++\n            }\n        }\n    }\n\n    private _doLoad(vo: LoaderVO): void {\n        let type: string = vo.fileType ? vo.fileType : vo.getFileType()\n        let loader: ILoader\n        switch (type) {\n            case eFileType.JPG:\n            case eFileType.JPEG:\n            case eFileType.PNG:\n                vo.loadType = eLoaderType.IMAGE\n                loader = new ImageLoader()\n                break\n            case eFileType.PREFAB:\n                vo.loadType = eLoaderType.PREFAB\n                loader = new PrefabLoader()\n                break\n            case eFileType.SKELETON:\n                vo.loadType = eLoaderType.SKELETON\n                loader = new SkeletonLoader()\n                break\n            case eFileType.ATLAS:\n                vo.loadType = eLoaderType.ATLAS\n                loader = new AtlasLoader()\n                break\n            case eFileType.JSON:\n                vo.loadType = eLoaderType.JSON\n                loader = new JsonLoader()\n                break\n            case eFileType.BIN:\n                vo.loadType = eLoaderType.BUFFER\n                loader = new BinaryLoader()\n                break\n            case eFileType.MP4:\n                vo.loadType = eLoaderType.VIDEO\n                loader = new VideoLoader()\n                break\n            // case EnumLoader.FILE_TYPE_ZIP:\n            //     vo.loadType = EnumLoaderType.ZIP\n            //     loader = new ZipLoader()\n            //     break\n            // case EnumLoader.FILE_TYPE_PAR:\n            //     vo.loadType = EnumLoaderType.PAR\n            //     loader = new PF_ParticleLoader()\n            //     break\n            default:\n                vo.loadType = eLoaderType.BUFFER\n                loader = new BinaryLoader()\n                break\n        }\n        vo.setProgress(0)\n        vo.startLoadTime = RenderManager.me.curTime\n        console.log('| [AssetLoader._doLoad]----:load resource:', vo.url, vo.loadType, vo.tryTimes)\n        loader.load(vo)\n    }\n\n    /** LoaderVO 加载完成 */\n    protected onLoadComplete(evt: LoadEvent): void {\n        // 释放一个连接\n        this._connCounter--\n        console.log('连接数', this._connCounter)\n\n        const vo = evt.target as LoaderVO\n\n        // 任务取消的情况下会导致vo计数为0\n        // 所以要释放加载的资源和vo\n        if (vo.counter == 0) {\n            const hasRes = this._cache.checkRes(vo.url)\n            if (!hasRes) {\n                // 释放资源\n                console.log('[AssetLoader] 释放取消加载的资源', vo.url)\n                assetManager.releaseAsset(vo.content as Asset)\n                // 释放vo\n                this.recycleVO()\n            }\n            return\n        }\n\n        // 缓存资源\n        switch (vo.loadType) {\n            case eLoaderType.IMAGE:\n                let spriteFrameCache = CacheWarp(new SpriteFrameCache(vo.url, vo.finalLoadURL, vo.content))\n                this._cache.setRes(vo.url, spriteFrameCache)\n                break\n\n            case eLoaderType.PREFAB:\n                let prefabCache = CacheWarp(new PrefabDataCache(vo.url, vo.finalLoadURL, vo.content))\n                this._cache.setRes(vo.url, prefabCache)\n                break\n\n            case eLoaderType.SKELETON:\n                let skeletonCache = CacheWarp(new SkeletonDataCache(vo.url, vo.finalLoadURL, vo.content))\n                this._cache.setRes(vo.url, skeletonCache)\n                break\n\n            case eLoaderType.JSON:\n                let jsonCache = CacheWarp(new JsonCache(vo.url, vo.finalLoadURL, vo.content))\n                this._cache.setRes(vo.url, jsonCache)\n                break\n\n            case eLoaderType.ATLAS:\n                let atlasCache = CacheWarp(new AtlasCache(vo.url, vo.finalLoadURL, vo.content))\n                this._cache.setRes(vo.url, atlasCache)\n                break\n\n            case eLoaderType.BUFFER:\n                let bufferCache = CacheWarp(new BufferCache(vo.url, vo.finalLoadURL, vo.content))\n                this._cache.setRes(vo.url, bufferCache)\n                break\n\n            case eLoaderType.VIDEO:\n                let videoCache = CacheWarp(new VideoCache(vo.url, vo.finalLoadURL, vo.content))\n                this._cache.setRes(vo.url, videoCache)\n                break\n        }\n\n        // 检查任务的完成情况\n        vo.checkTask()\n    }\n\n    /** LoaderVO 加载失败 */\n    protected onLoadFail(evt: LoadEvent): void {\n        // 释放一个连接\n        this._connCounter--\n        console.log('连接数', this._connCounter)\n\n        const vo = evt.target as LoaderVO\n\n        // 任务取消的情况下会导致vo计数为0\n        // 所以要释放加载的资源和vo\n        if (vo.counter == 0) {\n            // 释放vo\n            this.recycleVO()\n            return\n        }\n\n        if (vo.tryTimes++ < this._retryTimes) {\n            // 重新添加到序列\n            RenderManager.me.addCallback(\n                this,\n                () => {\n                    vo.reuse()\n                    this._queueList.push(vo.url)\n                },\n                1,\n                this._retryDelay\n            )\n        } else {\n            // 加载失败\n            vo.checkTask()\n        }\n    }\n\n    protected onTaskFinish(evt: LoadEvent): void {\n        const task = evt.target as LoadTask\n        // const voList = task.voList.concat() // 这个list是克隆，所以不用担心task回收以后list会变空\n        this._taskMap.delete(task.id)\n        LoadTask.Recycle(task) // 回收task，回收后voList中的vo计数都会减1\n\n        // 回收vo\n        this.recycleVO()\n    }\n\n    /** 回收vo */\n    private recycleVO() {\n        this._voMap.forEach((vo) => {\n            if (vo.counter == 0) {\n                // 如果vo还处于加载中，则不能回收\n                if (vo.status == eLoaderStatus.LOADING) {\n                    return\n                }\n                // 任务可能取消，所以要检查队列里是否残留\n                const idx = this._queueList.indexOf(vo.url)\n                if (idx > -1) {\n                    this._queueList.splice(idx, 1)\n                }\n\n                this._voMap.delete(vo.url)\n                LoaderVO.Recycle(vo)\n            }\n        }, this)\n    }\n\n    private insertLoad(url: string, property: number): LoaderVO {\n        // console.log('|| AssetLoader insertLoad:' + url);\n        let vo: LoaderVO\n        if (this.hasRes(url)) {\n            // 已有资源\n            // 延长一个生命周期\n            this._cache.renewal(url)\n        } else {\n            vo = this._voMap.get(url)\n            if (!vo) {\n                vo = LoaderVO.Create(url, property)\n                this._voMap.set(url, vo)\n                vo.addEventListener(LoadEvent.COMPLETE, this.onLoadComplete, this)\n                vo.addEventListener(LoadEvent.FAIL, this.onLoadFail, this)\n\n                // 插入加载队列\n                const len: number = this._queueList.length\n                if (len) {\n                    let index = -1\n                    for (let i: number = 0; i < len; ++i) {\n                        const item = this._voMap.get(this._queueList[i])\n                        if (item && item.property > property) {\n                            break\n                        }\n                        index = i\n                    }\n                    this._queueList.splice(index + 1, 0, url)\n                } else {\n                    this._queueList[0] = url\n                }\n            }\n        }\n\n        return vo\n    }\n\n    private hasRes(url: string): boolean {\n        return this._cache.checkRes(url)\n    }\n}\n","/*\n * @Author: Blues\n * @Date: 2021-11-10 23:53:51\n * @LastEditTime: 2022-01-07 16:59:21\n * @LastEditors: Blues\n * @Description:\n */\nimport { AssetCache } from './cache/AssetCache'\nimport { AssetLoader } from './loader/AssetLoader'\nimport { ePriority, LoaderConfig } from './loader/EnumLoader'\n\nexport class AssetManager {\n    private static _me: AssetManager = null\n\n    private _cache: AssetCache = null\n    private _loader: AssetLoader = null\n\n    constructor() {\n        this._cache = new AssetCache()\n        this._loader = new AssetLoader(this._cache, LoaderConfig.GAMING_CONNECTION, LoaderConfig.LOAD_FAILED_TRY_TIMES)\n    }\n\n    public static get me(): AssetManager {\n        if (this._me == null) {\n            this._me = new AssetManager()\n        }\n        return this._me\n    }\n\n    /**\n     * 加载游戏资源\n     *\n     * @param 资源url，可以带后缀，也可以不带。\n     * @param 加载成功回调\n     * @param 失败回调\n     * @param 进度\n     * @param 文件类型。如果url不带后缀，那必须要指定fileType。如果带了后缀，那可以不用指定\n     * @param 加载带优先级\n     * @param 是否立即执行\n     * @returns 返回TaskId，利用它可以取消下载\n     */\n    public load(\n        url: string,\n        thisObj: object,\n        onComplete?: () => void,\n        onError?: (err: Error) => void,\n        onProgress?: (progress: number) => void,\n        fileType: string = '',\n        property: number = ePriority.UI,\n        immediately: boolean = false\n    ): number {\n        return this._loader.load(url, thisObj, onComplete, onError, onProgress, fileType, property, immediately)\n    }\n\n    public loadGroup(\n        urls: string[],\n        thisObj: object = null,\n        onComplete: () => void = null,\n        onError: (err: Error) => void = null,\n        onProgress: (progress: number) => void = null,\n        property: number = ePriority.UI,\n        immediately: boolean = false\n    ): number {\n        return this._loader.loadGroup(urls, thisObj, onComplete, onError, onProgress, property, immediately)\n    }\n\n    public cancel(taskId: number): void {\n        this._loader.cancel(taskId)\n    }\n\n    public get cache(): AssetCache {\n        return this._cache\n    }\n}\n","import { resources, SpriteAtlas, SpriteFrame } from 'cc'\nimport BaseCache from './BaseCache'\n\nexport default class AtlasCache extends BaseCache {\n    public get data(): SpriteAtlas {\n        return this._data as SpriteAtlas\n    }\n\n    public getSpriteFrame(name: string): SpriteFrame {\n        return this.data ? this.data.getSpriteFrame(name) : null\n    }\n\n    protected addRef() {\n        this.data && this.data.addRef()\n    }\n\n    protected decRef() {\n        this.data && this.data.decRef()\n    }\n\n    public get refCount(): number {\n        return this.data == null ? 0 : this.data.refCount\n    }\n\n    /**\n     * 实际销毁，从内存中清除\n     */\n    public destroy(): void {\n        if (this._data != null && this._data instanceof SpriteAtlas) {\n            resources.release(this._finalURL, SpriteAtlas)\n            // assetManager.releaseAsset(this._data)\n            this._data.destroy()\n            this._data = null\n        }\n        this._isDisposed = true\n    }\n}\n","import { resources, SpriteAtlas } from 'cc'\nimport { ILoader } from './ILoader'\nimport LoaderVO from './LoaderVO'\n\nexport default class AtlasLoader implements ILoader {\n    load(vo: LoaderVO) {\n        vo.finalLoadURL = vo.path\n        resources.load(\n            vo.finalLoadURL,\n            SpriteAtlas,\n            (finished, total) => {\n                vo.setProgress(finished / total)\n            },\n            (err, content) => {\n                if (err != null) {\n                    console.error('[AtlasLoader]', err)\n                    vo.fail(err)\n                } else {\n                    vo.complete(content)\n                }\n            }\n        )\n    }\n}\n","/*\n * @Author: Blues\n * @Date: 2021-11-11 18:04:45\n * @LastEditTime: 2021-11-26 22:32:28\n * @LastEditors: Blues\n * @Description:\n */\n\nimport { AssetManager } from '../AssetManager'\n\nexport default class BaseCache {\n    protected _url: string = null\n    protected _finalURL: string = null\n    protected _data: any = null\n    protected _ref: number = 0 // 引用计数\n    protected _isDisposed: boolean\n    /** 生命周期 */\n    public lifeTime: number = 0\n\n    constructor(url: string, finalURL: string, data: any) {\n        this._url = url\n        this._finalURL = finalURL\n        this._data = data\n    }\n\n    get data() {\n        return this._data\n    }\n\n    get url() {\n        return this._url\n    }\n\n    get finalURL() {\n        return this._finalURL\n    }\n\n    get isDisposed() {\n        return this._isDisposed\n    }\n\n    /**\n     * 每次调用都会对引用计数加1\n     */\n    getOnce(): any {\n        return this._data\n    }\n\n    /**\n     * 去除引用计数\n     *\n     */\n    public dispose(): void {}\n\n    protected addRef() {\n        this._ref++\n    }\n\n    protected decRef() {\n        this._ref--\n    }\n\n    /**\n     * 实际销毁，从内存中清除\n     *\n     */\n    public destroy(): void {\n        this._data = null\n        this._isDisposed = true\n    }\n\n    get refCount(): number {\n        return this._ref\n    }\n}\n\nexport function CacheWarp<T extends BaseCache>(target: T): T {\n    let getOnce = target.getOnce\n    target.getOnce = function (): any {\n        let result = getOnce.apply(this, arguments)\n        this.addRef()\n        return result\n    }\n\n    let dispose = target.dispose\n    target.dispose = function (): void {\n        let result = dispose.apply(this, arguments)\n        this.decRef()\n        if (this.refCount == 0) {\n            // 当计数器为0，放入惰性字典而不是立即释放。避免造成频繁加载。\n            AssetManager.me.cache.setInertia(this)\n        }\n        return result\n    }\n    return target as T\n}\n","import { _decorator, Component, Node, resources, ImageAsset } from 'cc'\nimport { BaseSectionVO } from '../data/SectionVO'\nimport { GameManager } from '../manager/GameManager'\nimport { SectionManager } from '../manager/SectionManager'\nimport { ValueManager } from '../manager/ValueManager'\nimport { AssetManager } from '../maou/asset/AssetManager'\nimport { EventDispatcher, IEventDispatcher, IListener } from '../maou/event/EventDispatcher'\nimport { MaouEvent } from '../maou/event/MaouEvent'\nconst { ccclass, property } = _decorator\n\n@ccclass('BaseSectionComponent')\nexport class BaseSectionComponent extends Component implements IEventDispatcher {\n    public static EventType = {\n        Loaded: 'loaded',\n        Next: 'next'\n    }\n\n    protected _vo: BaseSectionVO = null\n\n    protected _evtDispatcher: EventDispatcher = null\n\n    public isBackRun = false\n\n    constructor() {\n        super()\n        this._evtDispatcher = new EventDispatcher(this)\n    }\n\n    setData(vo: BaseSectionVO) {\n        this._vo = vo\n    }\n\n    load() {\n        if (this._vo == null || this._vo.resource == null || this._vo.resource.length == 0) {\n            this.dispatchEvent(new MaouEvent(BaseSectionComponent.EventType.Loaded))\n            return\n        }\n\n        AssetManager.me.loadGroup(this._vo.resource, this, () => {\n            this.dispatchEvent(new MaouEvent(BaseSectionComponent.EventType.Loaded))\n        })\n    }\n\n    onLoaded() {}\n\n    show(container: Node) {\n        this.node.parent = container\n    }\n\n    run(...args) {}\n\n    onBack(): object {\n        return null\n    }\n\n    dispose() {}\n\n    clickNext(evt = null, data = null) {\n        this.dispatchEvent(new MaouEvent(BaseSectionComponent.EventType.Next, data))\n    }\n\n    get id(): string {\n        return this._vo.id\n    }\n\n    get data(): BaseSectionVO {\n        return this._vo\n    }\n\n    get valueManager(): ValueManager {\n        return GameManager.me.valueManager\n    }\n\n    get sectionManager(): SectionManager {\n        return GameManager.me.sectionManger\n    }\n\n    // IEventDispatcher 接口\n    dispatchEvent(event: MaouEvent): void {\n        this._evtDispatcher.dispatchEvent(event)\n    }\n    dispatchEventWith(type: string, data?: object): void {\n        this._evtDispatcher.dispatchEventWith(type, data)\n    }\n    addEventListener(type: string, listener: IListener, thisObj?: object, priority?: number): void {\n        this._evtDispatcher.addEventListener(type, listener, thisObj, priority)\n    }\n    once(type: string, listener: IListener, thisObj?: object, priority?: number): void {\n        this._evtDispatcher.once(type, listener, thisObj, priority)\n    }\n    removeEventListener(type: string, listener: IListener) {\n        this._evtDispatcher.removeEventListener(type, listener)\n    }\n    removeAll() {\n        this._evtDispatcher.removeAll()\n    }\n    hasEventListener(type: any): boolean {\n        return this._evtDispatcher.hasEventListener(type)\n    }\n    removeTargetListener(target: object): void {\n        this._evtDispatcher.removeTargetListener(target)\n    }\n}\n","import { BufferAsset, resources } from 'cc'\nimport { ILoader } from './ILoader'\nimport LoaderVO from './LoaderVO'\n\nexport default class BinaryLoader implements ILoader {\n    load(vo: LoaderVO) {\n        vo.finalLoadURL = vo.path\n        resources.load(\n            vo.finalLoadURL,\n            BufferAsset,\n            (finished, total) => {\n                vo.setProgress(finished / total)\n            },\n            (err, content) => {\n                if (err != null) {\n                    console.error('[BinaryLoader]', err)\n                    vo.fail(err)\n                } else {\n                    vo.complete(content)\n                }\n            }\n        )\n    }\n\n    //load(vo: LoaderVO) {\n    //     vo.finalLoadURL = vo.url\n\n    //     let xhr: XMLHttpRequest = new XMLHttpRequest()\n    //     xhr.open('GET', vo.finalLoadURL, true)\n    //     xhr.responseType = 'arraybuffer'\n\n    //     xhr.onload = function (event) {\n    //         let arrayBuffer = xhr.response\n    //         if (arrayBuffer) {\n    //             let result = new Uint8Array(arrayBuffer)\n    //             vo.complete(result)\n    //         } else {\n    //             const msg = `[BinaryLoader] response:null, status:${xhr.status}`\n    //             console.error(msg)\n    //             vo.fail(new Error(msg))\n    //         }\n    //     }\n\n    //     // 错误处理\n    //     xhr.onerror = function (evt) {\n    //         const msg = `[BinaryLoader][onerror] status:${xhr.status}`\n    //         console.error(msg)\n    //         vo.fail(new Error(msg))\n    //     }\n\n    //     xhr.send(null)\n    // }\n}\n","import { color, EventTouch, Node, size, Sprite, tween, UITransform, v2, v3, Vec3, _decorator } from 'cc'\nimport { BoardSectionVO } from '../data/SectionVO'\nimport { AssetManager } from '../maou/asset/AssetManager'\nimport BaseCache from '../maou/asset/cache/BaseCache'\nimport SpriteFrameCache from '../maou/asset/cache/SpriteFrameCache'\nimport { RenderManager } from '../maou/core/RenderManager'\nimport { BaseSectionComponent } from './BaseSectionComponent'\nconst { ccclass, property } = _decorator\n\n@ccclass('BoardSectionComponent')\nexport class BoardSectionComponent extends BaseSectionComponent {\n    @property(Node)\n    btn1: Node = null\n\n    @property(Node)\n    btn2: Node = null\n\n    @property(Node)\n    btn3: Node = null\n\n    @property(Node)\n    fridgeBase: Node = null\n\n    @property(Node)\n    fridgeTray: Node = null\n\n    @property(Node)\n    hotPoint: Node = null\n\n    @property(Node)\n    dragNode: Node = null\n\n    @property(Sprite)\n    dragIcon: Sprite = null\n\n    @property(Sprite)\n    bigImage: Sprite = null\n\n    @property(Node)\n    dragBg: Node = null\n\n    @property(Sprite)\n    dragText: Sprite = null\n\n    private _curBtnIdx: number = 0\n    private _curItemId: string = ''\n    private _isOpen = false\n    private _isDraged = false\n    private _cacheMap: Map<string, BaseCache> = new Map()\n\n    get data(): BoardSectionVO {\n        return this._vo as BoardSectionVO\n    }\n\n    start() {\n        this.dragNode.active = false\n        this.dragText.node.active = false\n    }\n\n    run(openItemId: string = null) {\n        console.log(`[BoardSection] run opendItemId:${openItemId}, isBackRun:${this.isBackRun}`)\n\n        // 如果是重新运行，就重置item\n        if (this.isBackRun) {\n            this.valueManager.setBoardFlag(this.id, openItemId, false)\n        }\n\n        // 预加载item图片\n        this.data.items.forEach((itemvo) => {\n            this._getBigImage(itemvo.bigImage, null)\n        })\n\n        if (openItemId != null) {\n            if (!this.isBackRun) {\n                // 直接打开\n                this._isDraged = true\n                this.fridgeBase.position = v3(0, 0)\n                this.fridgeTray.position = v3(0, 36)\n                this.hotPoint.active = false\n                this._isOpen = true\n\n                this._curItemId = openItemId\n                this.valueManager.setBoardFlag(this.id, this._curItemId, true)\n                this._isDraged = true\n\n                // 显示大图\n                const itemvo = this._getCurItem()\n                this._getBigImage(itemvo.bigImage, (cache: SpriteFrameCache) => {\n                    this.bigImage.spriteFrame = cache.data\n                    this.dragNode.active = false\n                    this._endSection()\n                })\n            }\n        }\n\n        this._updateButon()\n        this._registerEvent()\n    }\n\n    dispose() {\n        this._unRegisterEvent()\n        // this._cacheMap.forEach((item) => {\n        //     item.dispose()\n        // })\n        this._cacheMap.clear()\n        this._cacheMap = null\n    }\n\n    // 打开冰箱托盘\n    clickOpenTray() {\n        tween(this.fridgeBase)\n            .to(0.5, { position: v3(0, 0) }, { easing: 'quadOut' })\n            .start()\n\n        tween(this.fridgeTray)\n            .to(0.5, { position: v3(0, 36) }, { easing: 'quadOut' })\n            .start()\n\n        this.dragText.node.active = true\n\n        this.hotPoint.active = false\n        this._isOpen = true\n    }\n\n    // 更新按钮状态\n    private _updateButon() {\n        this.data.items.forEach((item, index) => {\n            const flag = this.valueManager.getBoardFlag(this.id, item.id)\n            const disable = flag || this._curBtnIdx == index + 1\n            const btnNode = this[`btn${index + 1}`] as Node\n            btnNode.getChildByName('icon1').active = !disable\n            btnNode.getChildByName('icon2').active = disable\n        }, this)\n    }\n\n    private _registerEvent() {\n        this.data.items.forEach((item, index) => {\n            const btnNode = this[`btn${index + 1}`] as Node\n            btnNode.on(Node.EventType.TOUCH_START, this.onBtnTouchStart, this)\n        }, this)\n    }\n\n    private _unRegisterEvent() {\n        this.data.items.forEach((item, index) => {\n            const btnNode = this[`btn${index + 1}`] as Node\n            btnNode.targetOff(this)\n        }, this)\n    }\n\n    private onBtnTouchStart(evt: EventTouch) {\n        if (!this._isOpen || this._isDraged) {\n            return\n        }\n        const node = evt.currentTarget as Node\n        if (node.getChildByName('icon1').active == false) {\n            return\n        }\n\n        this.dragText.node.active = false\n        this._curBtnIdx = Number(node.name.split('Btn')[1])\n        const itemVO = this.data.items[this._curBtnIdx - 1]\n        this._curItemId = itemVO.id\n        this._updateButon()\n        this.node.on(Node.EventType.TOUCH_MOVE, this.onTouchMove, this)\n        this.node.on(Node.EventType.TOUCH_END, this.onTouchEnd, this)\n        this.node.on(Node.EventType.TOUCH_CANCEL, this.onTouchEnd, this)\n        let posV3 = v3()\n        let localUI = evt.getUILocation()\n        let uiSpaceWorldPos = v3(localUI.x, localUI.y, 0)\n        const uiTrans = this.node.getComponent(UITransform)\n        uiTrans.convertToNodeSpaceAR(uiSpaceWorldPos, posV3)\n        this.dragNode.position = posV3\n        this.dragNode.active = true\n        this.dragIcon.spriteFrame = node.getChildByName('icon1').getComponent(Sprite).spriteFrame\n\n        if (itemVO.dragConf) {\n            const uiTran = this.dragIcon.node.getComponent(UITransform)\n            uiTran.setContentSize(size(itemVO.dragConf.size.width, itemVO.dragConf.size.height))\n            this.dragBg.active = itemVO.dragConf.showBg\n        }\n    }\n\n    private onTouchEnd(evt: EventTouch) {\n        const node = evt.currentTarget as Node\n        this.node.targetOff(this)\n        if (this.dragNode.position.x >= -470 && this.dragNode.position.x <= 500 && this.dragNode.position.y >= -160 && this.dragNode.position.y <= 260) {\n            // 移动到目标位置\n            tween(this.dragNode)\n                .to(0.5, { position: v3(0, 20) }, { easing: 'quadOut' })\n                .call(() => {\n                    this.valueManager.setBoardFlag(this.id, this._curItemId, true)\n                    this._isDraged = true\n\n                    // 显示大图\n                    const itemvo = this._getCurItem()\n                    this._getBigImage(itemvo.bigImage, (cache: SpriteFrameCache) => {\n                        this.bigImage.spriteFrame = cache.data\n                        this.dragNode.active = false\n\n                        // 等待2秒钟结束当前section\n                        // RenderManager.me.addCallback(\n                        //     this,\n                        //     () => {\n                        //         this.valueManager.curItemId = this._curItemId\n                        //         this.clickNext(null, this._curItemId)\n                        //     },\n                        //     1,\n                        //     2000\n                        // )\n                        this._endSection()\n                    })\n                })\n                .start()\n        } else {\n            // 回到原来的位置\n            this.dragText.node.active = true\n            const btn = this[`btn${this._curBtnIdx}`] as Node\n            let pos = btn.position\n            let uiTrans = btn.parent.getComponent(UITransform)\n            pos = uiTrans.convertToWorldSpaceAR(pos)\n            pos = this.node.getComponent(UITransform).convertToNodeSpaceAR(pos)\n\n            tween(this.dragNode)\n                .to(0.5, { position: pos }, { easing: 'quadOut' })\n                .call(() => {\n                    this.dragNode.active = false\n                    this._curBtnIdx = 0\n                    this._updateButon()\n                })\n                .start()\n        }\n    }\n\n    private _endSection(waitTime = 2000) {\n        // 等待2秒钟结束当前section\n        RenderManager.me.addCallback(\n            this,\n            () => {\n                this.valueManager.curItemId = this._curItemId\n                this.clickNext(null, this._curItemId)\n            },\n            1,\n            waitTime\n        )\n    }\n\n    private onTouchMove(evt: EventTouch) {\n        this.dragNode.position = this.dragNode.position.add3f(evt.getUIDelta().x, evt.getUIDelta().y, 0)\n    }\n\n    private _getBigImage(path: string, cb: Function) {\n        if (this._cacheMap.has(path)) {\n            const cache = this._cacheMap.get(path)\n            cb && cb.call(this, cache)\n        } else {\n            AssetManager.me.load(path, this, () => {\n                const cache = AssetManager.me.cache.getRes(path)\n                this._cacheMap.set(path, cache)\n                cb && cb.call(this, cache)\n            })\n        }\n    }\n\n    private _getCurItem() {\n        for (let i = 0; i < this.data.items.length; i++) {\n            if (this.data.items[i].id == this._curItemId) {\n                return this.data.items[i]\n            }\n        }\n        return null\n    }\n\n    clickSwitch(evt, data: string) {\n        const arg: { hide: string[]; show: string[] } = JSON.parse(data)\n        arg.hide.forEach((nodeName) => {\n            this.node.getChildByPath(nodeName).active = false\n        })\n        arg.show.forEach((nodeName) => {\n            this.node.getChildByPath(nodeName).active = true\n        })\n    }\n}\n","import { BufferAsset, resources } from 'cc'\nimport { ByteArray } from '../../util/ByteArray'\nimport BaseCache from './BaseCache'\n\nexport default class BufferCache extends BaseCache {\n    public get data(): BufferAsset {\n        return this._data as BufferAsset\n    }\n\n    public getByteArray(): ByteArray {\n        return new ByteArray(this.data.buffer())\n    }\n\n    protected addRef() {\n        this.data && this.data.addRef()\n    }\n\n    protected decRef() {\n        this.data && this.data.decRef()\n    }\n\n    public get refCount(): number {\n        return this.data == null ? 0 : this.data.refCount\n    }\n\n    /**\n     * 实际销毁，从内存中清除\n     */\n    public destroy(): void {\n        if (this._data != null && this._data instanceof BufferAsset) {\n            resources.release(this._finalURL, BufferAsset)\n            // assetManager.releaseAsset(this._data)\n            this._data.destroy()\n            this._data = null\n        }\n        this._isDisposed = true\n    }\n}\n","//////////////////////////////////////////////////////////////////////////////////////\n//\n//  Copyright (c) 2014-present, Egret Technology.\n//  All rights reserved.\n//  Redistribution and use in source and binary forms, with or without\n//  modification, are permitted provided that the following conditions are met:\n//\n//     * Redistributions of source code must retain the above copyright\n//       notice, this list of conditions and the following disclaimer.\n//     * Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//     * Neither the name of the Egret nor the\n//       names of its contributors may be used to endorse or promote products\n//       derived from this software without specific prior written permission.\n//\n//  THIS SOFTWARE IS PROVIDED BY EGRET AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS\n//  OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n//  OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n//  IN NO EVENT SHALL EGRET AND CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,\n//  INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n//  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;LOSS OF USE, DATA,\n//  OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n//  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n//  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n//  EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n//\n//////////////////////////////////////////////////////////////////////////////////////\n\n/**\n * The Endian class contains values that denote the byte order used to represent multibyte numbers.\n * The byte order is either bigEndian (most significant byte first) or littleEndian (least significant byte first).\n * @version Egret 2.4\n * @platform Web,Native\n * @language en_US\n */\n/**\n * Endian 类中包含一些值，它们表示用于表示多字节数字的字节顺序。\n * 字节顺序为 bigEndian（最高有效字节位于最前）或 littleEndian（最低有效字节位于最前）。\n * @version Egret 2.4\n * @platform Web,Native\n * @language zh_CN\n */\nexport class Endian {\n    /**\n     * Indicates the least significant byte of the multibyte number appears first in the sequence of bytes.\n     * The hexadecimal number 0x12345678 has 4 bytes (2 hexadecimal digits per byte). The most significant byte is 0x12. The least significant byte is 0x78. (For the equivalent decimal number, 305419896, the most significant digit is 3, and the least significant digit is 6).\n     * @version Egret 2.4\n     * @platform Web,Native\n     * @language en_US\n     */\n    /**\n     * 表示多字节数字的最低有效字节位于字节序列的最前面。\n     * 十六进制数字 0x12345678 包含 4 个字节（每个字节包含 2 个十六进制数字）。最高有效字节为 0x12。最低有效字节为 0x78。（对于等效的十进制数字 305419896，最高有效数字是 3，最低有效数字是 6）。\n     * @version Egret 2.4\n     * @platform Web,Native\n     * @language zh_CN\n     */\n    public static LITTLE_ENDIAN: string = 'littleEndian'\n\n    /**\n     * Indicates the most significant byte of the multibyte number appears first in the sequence of bytes.\n     * The hexadecimal number 0x12345678 has 4 bytes (2 hexadecimal digits per byte).  The most significant byte is 0x12. The least significant byte is 0x78. (For the equivalent decimal number, 305419896, the most significant digit is 3, and the least significant digit is 6).\n     * @version Egret 2.4\n     * @platform Web,Native\n     * @language en_US\n     */\n    /**\n     * 表示多字节数字的最高有效字节位于字节序列的最前面。\n     * 十六进制数字 0x12345678 包含 4 个字节（每个字节包含 2 个十六进制数字）。最高有效字节为 0x12。最低有效字节为 0x78。（对于等效的十进制数字 305419896，最高有效数字是 3，最低有效数字是 6）。\n     * @version Egret 2.4\n     * @platform Web,Native\n     * @language zh_CN\n     */\n    public static BIG_ENDIAN: string = 'bigEndian'\n}\n\nexport const enum EndianConst {\n    LITTLE_ENDIAN = 0,\n    BIG_ENDIAN = 1\n}\n\nconst enum ByteArraySize {\n    SIZE_OF_BOOLEAN = 1,\n\n    SIZE_OF_INT8 = 1,\n\n    SIZE_OF_INT16 = 2,\n\n    SIZE_OF_INT32 = 4,\n\n    SIZE_OF_UINT8 = 1,\n\n    SIZE_OF_UINT16 = 2,\n\n    SIZE_OF_UINT32 = 4,\n\n    SIZE_OF_FLOAT32 = 4,\n\n    SIZE_OF_FLOAT64 = 8\n}\n/**\n * The ByteArray class provides methods and attributes for optimized reading and writing as well as dealing with binary data.\n * Note: The ByteArray class is applied to the advanced developers who need to access data at the byte layer.\n * @version Egret 2.4\n * @platform Web,Native\n * @includeExample egret/utils/ByteArray.ts\n * @language en_US\n */\n/**\n * ByteArray 类提供用于优化读取、写入以及处理二进制数据的方法和属性。\n * 注意：ByteArray 类适用于需要在字节层访问数据的高级开发人员。\n * @version Egret 2.4\n * @platform Web,Native\n * @includeExample egret/utils/ByteArray.ts\n * @language zh_CN\n */\nexport class ByteArray {\n    /**\n     * @private\n     */\n    protected bufferExtSize = 0 //Buffer expansion size\n\n    protected data: DataView\n\n    protected _bytes: Uint8Array\n    /**\n     * @private\n     */\n    protected _position: number\n\n    /**\n     *\n     * 已经使用的字节偏移量\n     * @protected\n     * @type {number}\n     * @memberOf ByteArray\n     */\n    protected write_position: number\n\n    /**\n     * Changes or reads the byte order; egret.EndianConst.BIG_ENDIAN or egret.EndianConst.LITTLE_EndianConst.\n     * @default egret.EndianConst.BIG_ENDIAN\n     * @version Egret 2.4\n     * @platform Web,Native\n     * @language en_US\n     */\n    /**\n     * 更改或读取数据的字节顺序；egret.EndianConst.BIG_ENDIAN 或 egret.EndianConst.LITTLE_ENDIAN。\n     * @default egret.EndianConst.BIG_ENDIAN\n     * @version Egret 2.4\n     * @platform Web,Native\n     * @language zh_CN\n     */\n    public get endian() {\n        return this.$endian == EndianConst.LITTLE_ENDIAN ? Endian.LITTLE_ENDIAN : Endian.BIG_ENDIAN\n    }\n\n    public set endian(value: string) {\n        this.$endian = value == Endian.LITTLE_ENDIAN ? EndianConst.LITTLE_ENDIAN : EndianConst.BIG_ENDIAN\n    }\n\n    protected $endian: EndianConst\n\n    /**\n     * @version Egret 2.4\n     * @platform Web,Native\n     */\n    constructor(buffer?: ArrayBuffer | Uint8Array, bufferExtSize = 0) {\n        if (bufferExtSize < 0) {\n            bufferExtSize = 0\n        }\n        this.bufferExtSize = bufferExtSize\n        let bytes: Uint8Array,\n            wpos = 0\n        if (buffer) {\n            //有数据，则可写字节数从字节尾开始\n            let uint8: Uint8Array\n            if (buffer instanceof Uint8Array) {\n                uint8 = buffer\n                wpos = buffer.length\n            } else {\n                wpos = buffer.byteLength\n                uint8 = new Uint8Array(buffer)\n            }\n            if (bufferExtSize == 0) {\n                bytes = new Uint8Array(wpos)\n            } else {\n                let multi = ((wpos / bufferExtSize) | 0) + 1\n                bytes = new Uint8Array(multi * bufferExtSize)\n            }\n            bytes.set(uint8)\n        } else {\n            bytes = new Uint8Array(bufferExtSize)\n        }\n        this.write_position = wpos\n        this._position = 0\n        this._bytes = bytes\n        this.data = new DataView(bytes.buffer)\n        this.endian = Endian.BIG_ENDIAN\n    }\n\n    /**\n     * @deprecated\n     * @version Egret 2.4\n     * @platform Web,Native\n     */\n    public setArrayBuffer(buffer: ArrayBuffer): void {}\n\n    /**\n     * 可读的剩余字节数\n     *\n     * @returns\n     *\n     * @memberOf ByteArray\n     */\n    public get readAvailable() {\n        return this.write_position - this._position\n    }\n\n    public get buffer(): ArrayBuffer {\n        return this.data.buffer.slice(0, this.write_position)\n    }\n\n    public get rawBuffer(): ArrayBuffer {\n        return this.data.buffer\n    }\n\n    /**\n     * @private\n     */\n    public set buffer(value: ArrayBuffer) {\n        let wpos = value.byteLength\n        let uint8 = new Uint8Array(value)\n        let bufferExtSize = this.bufferExtSize\n        let bytes: Uint8Array\n        if (bufferExtSize == 0) {\n            bytes = new Uint8Array(wpos)\n        } else {\n            let multi = ((wpos / bufferExtSize) | 0) + 1\n            bytes = new Uint8Array(multi * bufferExtSize)\n        }\n        bytes.set(uint8)\n        this.write_position = wpos\n        this._bytes = bytes\n        this.data = new DataView(bytes.buffer)\n    }\n\n    public get bytes(): Uint8Array {\n        return this._bytes\n    }\n\n    /**\n     * @private\n     * @version Egret 2.4\n     * @platform Web,Native\n     */\n    public get dataView(): DataView {\n        return this.data\n    }\n\n    /**\n     * @private\n     */\n    public set dataView(value: DataView) {\n        this.buffer = value.buffer\n    }\n\n    /**\n     * @private\n     */\n    public get bufferOffset(): number {\n        return this.data.byteOffset\n    }\n\n    /**\n     * The current position of the file pointer (in bytes) to move or return to the ByteArray object. The next time you start reading reading method call in this position, or will start writing in this position next time call a write method.\n     * @version Egret 2.4\n     * @platform Web,Native\n     * @language en_US\n     */\n    /**\n     * 将文件指针的当前位置（以字节为单位）移动或返回到 ByteArray 对象中。下一次调用读取方法时将在此位置开始读取，或者下一次调用写入方法时将在此位置开始写入。\n     * @version Egret 2.4\n     * @platform Web,Native\n     * @language zh_CN\n     */\n    public get position(): number {\n        return this._position\n    }\n\n    public set position(value: number) {\n        this._position = value\n        if (value > this.write_position) {\n            this.write_position = value\n        }\n    }\n\n    /**\n     * The length of the ByteArray object (in bytes).\n     * If the length is set to be larger than the current length, the right-side zero padding byte array.\n     * If the length is set smaller than the current length, the byte array is truncated.\n     * @version Egret 2.4\n     * @platform Web,Native\n     * @language en_US\n     */\n    /**\n     * ByteArray 对象的长度（以字节为单位）。\n     * 如果将长度设置为大于当前长度的值，则用零填充字节数组的右侧。\n     * 如果将长度设置为小于当前长度的值，将会截断该字节数组。\n     * @version Egret 2.4\n     * @platform Web,Native\n     * @language zh_CN\n     */\n    public get length(): number {\n        return this.write_position\n    }\n\n    public set length(value: number) {\n        this.write_position = value\n        if (this.data.byteLength > value) {\n            this._position = value\n        }\n        this._validateBuffer(value)\n    }\n\n    protected _validateBuffer(value: number) {\n        if (this.data.byteLength < value) {\n            let be = this.bufferExtSize\n            let tmp: Uint8Array\n            if (be == 0) {\n                tmp = new Uint8Array(value)\n            } else {\n                let nLen = (((value / be) >> 0) + 1) * be\n                tmp = new Uint8Array(nLen)\n            }\n            tmp.set(this._bytes)\n            this._bytes = tmp\n            this.data = new DataView(tmp.buffer)\n        }\n    }\n\n    /**\n     * The number of bytes that can be read from the current position of the byte array to the end of the array data.\n     * When you access a ByteArray object, the bytesAvailable property in conjunction with the read methods each use to make sure you are reading valid data.\n     * @version Egret 2.4\n     * @platform Web,Native\n     * @language en_US\n     */\n    /**\n     * 可从字节数组的当前位置到数组末尾读取的数据的字节数。\n     * 每次访问 ByteArray 对象时，将 bytesAvailable 属性与读取方法结合使用，以确保读取有效的数据。\n     * @version Egret 2.4\n     * @platform Web,Native\n     * @language zh_CN\n     */\n    public get bytesAvailable(): number {\n        return this.data.byteLength - this._position\n    }\n\n    /**\n     * Clears the contents of the byte array and resets the length and position properties to 0.\n     * @version Egret 2.4\n     * @platform Web,Native\n     * @language en_US\n     */\n    /**\n     * 清除字节数组的内容，并将 length 和 position 属性重置为 0。\n     * @version Egret 2.4\n     * @platform Web,Native\n     * @language zh_CN\n     */\n    public clear(): void {\n        let buffer = new ArrayBuffer(this.bufferExtSize)\n        this.data = new DataView(buffer)\n        this._bytes = new Uint8Array(buffer)\n        this._position = 0\n        this.write_position = 0\n    }\n    /**\n     * Read a Boolean value from the byte stream. Read a simple byte. If the byte is non-zero, it returns true; otherwise, it returns false.\n     * @return If the byte is non-zero, it returns true; otherwise, it returns false.\n     * @version Egret 2.4\n     * @platform Web,Native\n     * @language en_US\n     */\n    /**\n     * 从字节流中读取布尔值。读取单个字节，如果字节非零，则返回 true，否则返回 false\n     * @return 如果字节不为零，则返回 true，否则返回 false\n     * @version Egret 2.4\n     * @platform Web,Native\n     * @language zh_CN\n     */\n    public readBoolean(): boolean {\n        if (this.validate(ByteArraySize.SIZE_OF_BOOLEAN)) return !!this._bytes[this.position++]\n    }\n\n    /**\n     * Read signed bytes from the byte stream.\n     * @return An integer ranging from -128 to 127\n     * @version Egret 2.4\n     * @platform Web,Native\n     * @language en_US\n     */\n    /**\n     * 从字节流中读取带符号的字节\n     * @return 介于 -128 和 127 之间的整数\n     * @version Egret 2.4\n     * @platform Web,Native\n     * @language zh_CN\n     */\n    public readByte(): number {\n        if (this.validate(ByteArraySize.SIZE_OF_INT8)) return this.data.getInt8(this.position++)\n    }\n\n    /**\n     * Read data byte number specified by the length parameter from the byte stream. Starting from the position specified by offset, read bytes into the ByteArray object specified by the bytes parameter, and write bytes into the target ByteArray\n     * @param bytes ByteArray object that data is read into\n     * @param offset Offset (position) in bytes. Read data should be written from this position\n     * @param length Byte number to be read Default value 0 indicates reading all available data\n     * @version Egret 2.4\n     * @platform Web,Native\n     * @language en_US\n     */\n    /**\n     * 从字节流中读取 length 参数指定的数据字节数。从 offset 指定的位置开始，将字节读入 bytes 参数指定的 ByteArray 对象中，并将字节写入目标 ByteArray 中\n     * @param bytes 要将数据读入的 ByteArray 对象\n     * @param offset bytes 中的偏移（位置），应从该位置写入读取的数据\n     * @param length 要读取的字节数。默认值 0 导致读取所有可用的数据\n     * @version Egret 2.4\n     * @platform Web,Native\n     * @language zh_CN\n     */\n    public readBytes(bytes: ByteArray, offset: number = 0, length: number = 0): void {\n        if (!bytes) {\n            //由于bytes不返回，所以new新的无意义\n            return\n        }\n        let pos = this._position\n        let available = this.write_position - pos\n        if (available < 0) {\n            console.log(1025)\n            return\n        }\n        if (length == 0) {\n            length = available\n        } else if (length > available) {\n            console.log(1025)\n            return\n        }\n        const position = bytes._position\n        bytes._position = 0\n        bytes.validateBuffer(offset + length)\n        bytes._position = position\n        bytes._bytes.set(this._bytes.subarray(pos, pos + length), offset)\n        this.position += length\n    }\n\n    /**\n     * Read an IEEE 754 double-precision (64 bit) floating point number from the byte stream\n     * @return Double-precision (64 bit) floating point number\n     * @version Egret 2.4\n     * @platform Web,Native\n     * @language en_US\n     */\n    /**\n     * 从字节流中读取一个 IEEE 754 双精度（64 位）浮点数\n     * @return 双精度（64 位）浮点数\n     * @version Egret 2.4\n     * @platform Web,Native\n     * @language zh_CN\n     */\n    public readDouble(): number {\n        if (this.validate(ByteArraySize.SIZE_OF_FLOAT64)) {\n            let value = this.data.getFloat64(this._position, this.$endian == EndianConst.LITTLE_ENDIAN)\n            this.position += ByteArraySize.SIZE_OF_FLOAT64\n            return value\n        }\n    }\n\n    /**\n     * Read an IEEE 754 single-precision (32 bit) floating point number from the byte stream\n     * @return Single-precision (32 bit) floating point number\n     * @version Egret 2.4\n     * @platform Web,Native\n     * @language en_US\n     */\n    /**\n     * 从字节流中读取一个 IEEE 754 单精度（32 位）浮点数\n     * @return 单精度（32 位）浮点数\n     * @version Egret 2.4\n     * @platform Web,Native\n     * @language zh_CN\n     */\n    public readFloat(): number {\n        if (this.validate(ByteArraySize.SIZE_OF_FLOAT32)) {\n            let value = this.data.getFloat32(this._position, this.$endian == EndianConst.LITTLE_ENDIAN)\n            this.position += ByteArraySize.SIZE_OF_FLOAT32\n            return value\n        }\n    }\n\n    /**\n     * Read a 32-bit signed integer from the byte stream.\n     * @return A 32-bit signed integer ranging from -2147483648 to 2147483647\n     * @version Egret 2.4\n     * @platform Web,Native\n     * @language en_US\n     */\n    /**\n     * 从字节流中读取一个带符号的 32 位整数\n     * @return 介于 -2147483648 和 2147483647 之间的 32 位带符号整数\n     * @version Egret 2.4\n     * @platform Web,Native\n     * @language zh_CN\n     */\n    public readInt(): number {\n        if (this.validate(ByteArraySize.SIZE_OF_INT32)) {\n            let value = this.data.getInt32(this._position, this.$endian == EndianConst.LITTLE_ENDIAN)\n            this.position += ByteArraySize.SIZE_OF_INT32\n            return value\n        }\n    }\n\n    /**\n     * Read a 16-bit signed integer from the byte stream.\n     * @return A 16-bit signed integer ranging from -32768 to 32767\n     * @version Egret 2.4\n     * @platform Web,Native\n     * @language en_US\n     */\n    /**\n     * 从字节流中读取一个带符号的 16 位整数\n     * @return 介于 -32768 和 32767 之间的 16 位带符号整数\n     * @version Egret 2.4\n     * @platform Web,Native\n     * @language zh_CN\n     */\n    public readShort(): number {\n        if (this.validate(ByteArraySize.SIZE_OF_INT16)) {\n            let value = this.data.getInt16(this._position, this.$endian == EndianConst.LITTLE_ENDIAN)\n            this.position += ByteArraySize.SIZE_OF_INT16\n            return value\n        }\n    }\n\n    /**\n     * Read unsigned bytes from the byte stream.\n     * @return A unsigned integer ranging from 0 to 255\n     * @version Egret 2.4\n     * @platform Web,Native\n     * @language en_US\n     */\n    /**\n     * 从字节流中读取无符号的字节\n     * @return 介于 0 和 255 之间的无符号整数\n     * @version Egret 2.4\n     * @platform Web,Native\n     * @language zh_CN\n     */\n    public readUnsignedByte(): number {\n        if (this.validate(ByteArraySize.SIZE_OF_UINT8)) return this._bytes[this.position++]\n    }\n\n    /**\n     * Read a 32-bit unsigned integer from the byte stream.\n     * @return A 32-bit unsigned integer ranging from 0 to 4294967295\n     * @version Egret 2.4\n     * @platform Web,Native\n     * @language en_US\n     */\n    /**\n     * 从字节流中读取一个无符号的 32 位整数\n     * @return 介于 0 和 4294967295 之间的 32 位无符号整数\n     * @version Egret 2.4\n     * @platform Web,Native\n     * @language zh_CN\n     */\n    public readUnsignedInt(): number {\n        if (this.validate(ByteArraySize.SIZE_OF_UINT32)) {\n            let value = this.data.getUint32(this._position, this.$endian == EndianConst.LITTLE_ENDIAN)\n            this.position += ByteArraySize.SIZE_OF_UINT32\n            return value\n        }\n    }\n\n    /**\n     * Read a 16-bit unsigned integer from the byte stream.\n     * @return A 16-bit unsigned integer ranging from 0 to 65535\n     * @version Egret 2.4\n     * @platform Web,Native\n     * @language en_US\n     */\n    /**\n     * 从字节流中读取一个无符号的 16 位整数\n     * @return 介于 0 和 65535 之间的 16 位无符号整数\n     * @version Egret 2.4\n     * @platform Web,Native\n     * @language zh_CN\n     */\n    public readUnsignedShort(): number {\n        if (this.validate(ByteArraySize.SIZE_OF_UINT16)) {\n            let value = this.data.getUint16(this._position, this.$endian == EndianConst.LITTLE_ENDIAN)\n            this.position += ByteArraySize.SIZE_OF_UINT16\n            return value\n        }\n    }\n\n    /**\n     * Read a UTF-8 character string from the byte stream Assume that the prefix of the character string is a short unsigned integer (use byte to express length)\n     * @return UTF-8 character string\n     * @version Egret 2.4\n     * @platform Web,Native\n     * @language en_US\n     */\n    /**\n     * 从字节流中读取一个 UTF-8 字符串。假定字符串的前缀是无符号的短整型（以字节表示长度）\n     * @return UTF-8 编码的字符串\n     * @version Egret 2.4\n     * @platform Web,Native\n     * @language zh_CN\n     */\n    public readUTF(): string {\n        let length = this.readUnsignedShort()\n        if (length > 0) {\n            return this.readUTFBytes(length)\n        } else {\n            return ''\n        }\n    }\n\n    /**\n     * Read a UTF-8 byte sequence specified by the length parameter from the byte stream, and then return a character string\n     * @param Specify a short unsigned integer of the UTF-8 byte length\n     * @return A character string consists of UTF-8 bytes of the specified length\n     * @version Egret 2.4\n     * @platform Web,Native\n     * @language en_US\n     */\n    /**\n     * 从字节流中读取一个由 length 参数指定的 UTF-8 字节序列，并返回一个字符串\n     * @param length 指明 UTF-8 字节长度的无符号短整型数\n     * @return 由指定长度的 UTF-8 字节组成的字符串\n     * @version Egret 2.4\n     * @platform Web,Native\n     * @language zh_CN\n     */\n    public readUTFBytes(length: number): string {\n        if (!this.validate(length)) {\n            return\n        }\n        let data = this.data\n        let bytes = new Uint8Array(data.buffer, data.byteOffset + this._position, length)\n        this.position += length\n        return this.decodeUTF8(bytes)\n    }\n\n    /**\n     * Write a Boolean value. A single byte is written according to the value parameter. If the value is true, write 1; if the value is false, write 0.\n     * @param value A Boolean value determining which byte is written. If the value is true, write 1; if the value is false, write 0.\n     * @version Egret 2.4\n     * @platform Web,Native\n     * @language en_US\n     */\n    /**\n     * 写入布尔值。根据 value 参数写入单个字节。如果为 true，则写入 1，如果为 false，则写入 0\n     * @param value 确定写入哪个字节的布尔值。如果该参数为 true，则该方法写入 1；如果该参数为 false，则该方法写入 0\n     * @version Egret 2.4\n     * @platform Web,Native\n     * @language zh_CN\n     */\n    public writeBoolean(value: boolean): void {\n        this.validateBuffer(ByteArraySize.SIZE_OF_BOOLEAN)\n        this._bytes[this.position++] = +value\n    }\n\n    /**\n     * Write a byte into the byte stream\n     * The low 8 bits of the parameter are used. The high 24 bits are ignored.\n     * @param value A 32-bit integer. The low 8 bits will be written into the byte stream\n     * @version Egret 2.4\n     * @platform Web,Native\n     * @language en_US\n     */\n    /**\n     * 在字节流中写入一个字节\n     * 使用参数的低 8 位。忽略高 24 位\n     * @param value 一个 32 位整数。低 8 位将被写入字节流\n     * @version Egret 2.4\n     * @platform Web,Native\n     * @language zh_CN\n     */\n    public writeByte(value: number): void {\n        this.validateBuffer(ByteArraySize.SIZE_OF_INT8)\n        this._bytes[this.position++] = value & 0xff\n    }\n\n    /**\n     * Write the byte sequence that includes length bytes in the specified byte array, bytes, (starting at the byte specified by offset, using a zero-based index), into the byte stream\n     * If the length parameter is omitted, the default length value 0 is used and the entire buffer starting at offset is written. If the offset parameter is also omitted, the entire buffer is written\n     * If the offset or length parameter is out of range, they are clamped to the beginning and end of the bytes array.\n     * @param bytes ByteArray Object\n     * @param offset A zero-based index specifying the position into the array to begin writing\n     * @param length An unsigned integer specifying how far into the buffer to write\n     * @version Egret 2.4\n     * @platform Web,Native\n     * @language en_US\n     */\n    /**\n     * 将指定字节数组 bytes（起始偏移量为 offset，从零开始的索引）中包含 length 个字节的字节序列写入字节流\n     * 如果省略 length 参数，则使用默认长度 0；该方法将从 offset 开始写入整个缓冲区。如果还省略了 offset 参数，则写入整个缓冲区\n     * 如果 offset 或 length 超出范围，它们将被锁定到 bytes 数组的开头和结尾\n     * @param bytes ByteArray 对象\n     * @param offset 从 0 开始的索引，表示在数组中开始写入的位置\n     * @param length 一个无符号整数，表示在缓冲区中的写入范围\n     * @version Egret 2.4\n     * @platform Web,Native\n     * @language zh_CN\n     */\n    public writeBytes(bytes: ByteArray, offset: number = 0, length: number = 0): void {\n        let writeLength: number\n        if (offset < 0) {\n            return\n        }\n        if (length < 0) {\n            return\n        } else if (length == 0) {\n            writeLength = bytes.length - offset\n        } else {\n            writeLength = Math.min(bytes.length - offset, length)\n        }\n        if (writeLength > 0) {\n            this.validateBuffer(writeLength)\n            this._bytes.set(bytes._bytes.subarray(offset, offset + writeLength), this._position)\n            this.position = this._position + writeLength\n        }\n    }\n\n    /**\n     * Write an IEEE 754 double-precision (64 bit) floating point number into the byte stream\n     * @param value Double-precision (64 bit) floating point number\n     * @version Egret 2.4\n     * @platform Web,Native\n     * @language en_US\n     */\n    /**\n     * 在字节流中写入一个 IEEE 754 双精度（64 位）浮点数\n     * @param value 双精度（64 位）浮点数\n     * @version Egret 2.4\n     * @platform Web,Native\n     * @language zh_CN\n     */\n    public writeDouble(value: number): void {\n        this.validateBuffer(ByteArraySize.SIZE_OF_FLOAT64)\n        this.data.setFloat64(this._position, value, this.$endian == EndianConst.LITTLE_ENDIAN)\n        this.position += ByteArraySize.SIZE_OF_FLOAT64\n    }\n\n    /**\n     * Write an IEEE 754 single-precision (32 bit) floating point number into the byte stream\n     * @param value Single-precision (32 bit) floating point number\n     * @version Egret 2.4\n     * @platform Web,Native\n     * @language en_US\n     */\n    /**\n     * 在字节流中写入一个 IEEE 754 单精度（32 位）浮点数\n     * @param value 单精度（32 位）浮点数\n     * @version Egret 2.4\n     * @platform Web,Native\n     * @language zh_CN\n     */\n    public writeFloat(value: number): void {\n        this.validateBuffer(ByteArraySize.SIZE_OF_FLOAT32)\n        this.data.setFloat32(this._position, value, this.$endian == EndianConst.LITTLE_ENDIAN)\n        this.position += ByteArraySize.SIZE_OF_FLOAT32\n    }\n\n    /**\n     * Write a 32-bit signed integer into the byte stream\n     * @param value An integer to be written into the byte stream\n     * @version Egret 2.4\n     * @platform Web,Native\n     * @language en_US\n     */\n    /**\n     * 在字节流中写入一个带符号的 32 位整数\n     * @param value 要写入字节流的整数\n     * @version Egret 2.4\n     * @platform Web,Native\n     * @language zh_CN\n     */\n    public writeInt(value: number): void {\n        this.validateBuffer(ByteArraySize.SIZE_OF_INT32)\n        this.data.setInt32(this._position, value, this.$endian == EndianConst.LITTLE_ENDIAN)\n        this.position += ByteArraySize.SIZE_OF_INT32\n    }\n\n    /**\n     * Write a 16-bit integer into the byte stream. The low 16 bits of the parameter are used. The high 16 bits are ignored.\n     * @param value A 32-bit integer. Its low 16 bits will be written into the byte stream\n     * @version Egret 2.4\n     * @platform Web,Native\n     * @language en_US\n     */\n    /**\n     * 在字节流中写入一个 16 位整数。使用参数的低 16 位。忽略高 16 位\n     * @param value 32 位整数，该整数的低 16 位将被写入字节流\n     * @version Egret 2.4\n     * @platform Web,Native\n     * @language zh_CN\n     */\n    public writeShort(value: number): void {\n        this.validateBuffer(ByteArraySize.SIZE_OF_INT16)\n        this.data.setInt16(this._position, value, this.$endian == EndianConst.LITTLE_ENDIAN)\n        this.position += ByteArraySize.SIZE_OF_INT16\n    }\n\n    /**\n     * Write a 32-bit unsigned integer into the byte stream\n     * @param value An unsigned integer to be written into the byte stream\n     * @version Egret 2.4\n     * @platform Web,Native\n     * @language en_US\n     */\n    /**\n     * 在字节流中写入一个无符号的 32 位整数\n     * @param value 要写入字节流的无符号整数\n     * @version Egret 2.4\n     * @platform Web,Native\n     * @language zh_CN\n     */\n    public writeUnsignedInt(value: number): void {\n        this.validateBuffer(ByteArraySize.SIZE_OF_UINT32)\n        this.data.setUint32(this._position, value, this.$endian == EndianConst.LITTLE_ENDIAN)\n        this.position += ByteArraySize.SIZE_OF_UINT32\n    }\n\n    /**\n     * Write a 16-bit unsigned integer into the byte stream\n     * @param value An unsigned integer to be written into the byte stream\n     * @version Egret 2.5\n     * @platform Web,Native\n     * @language en_US\n     */\n    /**\n     * 在字节流中写入一个无符号的 16 位整数\n     * @param value 要写入字节流的无符号整数\n     * @version Egret 2.5\n     * @platform Web,Native\n     * @language zh_CN\n     */\n    public writeUnsignedShort(value: number): void {\n        this.validateBuffer(ByteArraySize.SIZE_OF_UINT16)\n        this.data.setUint16(this._position, value, this.$endian == EndianConst.LITTLE_ENDIAN)\n        this.position += ByteArraySize.SIZE_OF_UINT16\n    }\n\n    /**\n     * Write a UTF-8 string into the byte stream. The length of the UTF-8 string in bytes is written first, as a 16-bit integer, followed by the bytes representing the characters of the string\n     * @param value Character string value to be written\n     * @version Egret 2.4\n     * @platform Web,Native\n     * @language en_US\n     */\n    /**\n     * 将 UTF-8 字符串写入字节流。先写入以字节表示的 UTF-8 字符串长度（作为 16 位整数），然后写入表示字符串字符的字节\n     * @param value 要写入的字符串值\n     * @version Egret 2.4\n     * @platform Web,Native\n     * @language zh_CN\n     */\n    public writeUTF(value: string): void {\n        let utf8bytes: ArrayLike<number> = this.encodeUTF8(value)\n        let length: number = utf8bytes.length\n        this.validateBuffer(ByteArraySize.SIZE_OF_UINT16 + length)\n        this.data.setUint16(this._position, length, this.$endian == EndianConst.LITTLE_ENDIAN)\n        this.position += ByteArraySize.SIZE_OF_UINT16\n        this._writeUint8Array(utf8bytes, false)\n    }\n\n    /**\n     * Write a UTF-8 string into the byte stream. Similar to the writeUTF() method, but the writeUTFBytes() method does not prefix the string with a 16-bit length word\n     * @param value Character string value to be written\n     * @version Egret 2.4\n     * @platform Web,Native\n     * @language en_US\n     */\n    /**\n     * 将 UTF-8 字符串写入字节流。类似于 writeUTF() 方法，但 writeUTFBytes() 不使用 16 位长度的词为字符串添加前缀\n     * @param value 要写入的字符串值\n     * @version Egret 2.4\n     * @platform Web,Native\n     * @language zh_CN\n     */\n    public writeUTFBytes(value: string): void {\n        this._writeUint8Array(this.encodeUTF8(value))\n    }\n\n    /**\n     *\n     * @returns\n     * @version Egret 2.4\n     * @platform Web,Native\n     */\n    public toString(): string {\n        return '[ByteArray] length:' + this.length + ', bytesAvailable:' + this.bytesAvailable\n    }\n\n    /**\n     * @private\n     * 将 Uint8Array 写入字节流\n     * @param bytes 要写入的Uint8Array\n     * @param validateBuffer\n     */\n    public _writeUint8Array(bytes: Uint8Array | ArrayLike<number>, validateBuffer: boolean = true): void {\n        let pos = this._position\n        let npos = pos + bytes.length\n        if (validateBuffer) {\n            this.validateBuffer(npos)\n        }\n        this.bytes.set(bytes, pos)\n        this.position = npos\n    }\n\n    /**\n     * @param len\n     * @returns\n     * @version Egret 2.4\n     * @platform Web,Native\n     * @private\n     */\n    public validate(len: number): boolean {\n        let bl = this._bytes.length\n        if (bl > 0 && this._position + len <= bl) {\n            return true\n        } else {\n            console.log(1025)\n        }\n    }\n\n    /**********************/\n    /*  PRIVATE METHODS   */\n    /**********************/\n    /**\n     * @private\n     * @param len\n     * @param needReplace\n     */\n    protected validateBuffer(len: number): void {\n        this.write_position = len > this.write_position ? len : this.write_position\n        len += this._position\n        this._validateBuffer(len)\n    }\n\n    /**\n     * @private\n     * UTF-8 Encoding/Decoding\n     */\n    private encodeUTF8(str: string): Uint8Array {\n        let pos: number = 0\n        let codePoints = this.stringToCodePoints(str)\n        let outputBytes = []\n\n        while (codePoints.length > pos) {\n            let code_point: number = codePoints[pos++]\n\n            if (this.inRange(code_point, 0xd800, 0xdfff)) {\n                this.encoderError(code_point)\n            } else if (this.inRange(code_point, 0x0000, 0x007f)) {\n                outputBytes.push(code_point)\n            } else {\n                let count, offset\n                if (this.inRange(code_point, 0x0080, 0x07ff)) {\n                    count = 1\n                    offset = 0xc0\n                } else if (this.inRange(code_point, 0x0800, 0xffff)) {\n                    count = 2\n                    offset = 0xe0\n                } else if (this.inRange(code_point, 0x10000, 0x10ffff)) {\n                    count = 3\n                    offset = 0xf0\n                }\n\n                outputBytes.push(this.div(code_point, Math.pow(64, count)) + offset)\n\n                while (count > 0) {\n                    let temp = this.div(code_point, Math.pow(64, count - 1))\n                    outputBytes.push(0x80 + (temp % 64))\n                    count -= 1\n                }\n            }\n        }\n        return new Uint8Array(outputBytes)\n    }\n\n    /**\n     * @private\n     *\n     * @param data\n     * @returns\n     */\n    private decodeUTF8(data: Uint8Array): string {\n        let fatal: boolean = false\n        let pos: number = 0\n        let result: string = ''\n        let code_point: number\n        let utf8_code_point = 0\n        let utf8_bytes_needed = 0\n        let utf8_bytes_seen = 0\n        let utf8_lower_boundary = 0\n\n        while (data.length > pos) {\n            let _byte = data[pos++]\n\n            if (_byte == this.EOF_byte) {\n                if (utf8_bytes_needed != 0) {\n                    code_point = this.decoderError(fatal)\n                } else {\n                    code_point = this.EOF_code_point\n                }\n            } else {\n                if (utf8_bytes_needed == 0) {\n                    if (this.inRange(_byte, 0x00, 0x7f)) {\n                        code_point = _byte\n                    } else {\n                        if (this.inRange(_byte, 0xc2, 0xdf)) {\n                            utf8_bytes_needed = 1\n                            utf8_lower_boundary = 0x80\n                            utf8_code_point = _byte - 0xc0\n                        } else if (this.inRange(_byte, 0xe0, 0xef)) {\n                            utf8_bytes_needed = 2\n                            utf8_lower_boundary = 0x800\n                            utf8_code_point = _byte - 0xe0\n                        } else if (this.inRange(_byte, 0xf0, 0xf4)) {\n                            utf8_bytes_needed = 3\n                            utf8_lower_boundary = 0x10000\n                            utf8_code_point = _byte - 0xf0\n                        } else {\n                            this.decoderError(fatal)\n                        }\n                        utf8_code_point = utf8_code_point * Math.pow(64, utf8_bytes_needed)\n                        code_point = null\n                    }\n                } else if (!this.inRange(_byte, 0x80, 0xbf)) {\n                    utf8_code_point = 0\n                    utf8_bytes_needed = 0\n                    utf8_bytes_seen = 0\n                    utf8_lower_boundary = 0\n                    pos--\n                    code_point = this.decoderError(fatal, _byte)\n                } else {\n                    utf8_bytes_seen += 1\n                    utf8_code_point = utf8_code_point + (_byte - 0x80) * Math.pow(64, utf8_bytes_needed - utf8_bytes_seen)\n\n                    if (utf8_bytes_seen !== utf8_bytes_needed) {\n                        code_point = null\n                    } else {\n                        let cp = utf8_code_point\n                        let lower_boundary = utf8_lower_boundary\n                        utf8_code_point = 0\n                        utf8_bytes_needed = 0\n                        utf8_bytes_seen = 0\n                        utf8_lower_boundary = 0\n                        if (this.inRange(cp, lower_boundary, 0x10ffff) && !this.inRange(cp, 0xd800, 0xdfff)) {\n                            code_point = cp\n                        } else {\n                            code_point = this.decoderError(fatal, _byte)\n                        }\n                    }\n                }\n            }\n            //Decode string\n            if (code_point !== null && code_point !== this.EOF_code_point) {\n                if (code_point <= 0xffff) {\n                    if (code_point > 0) result += String.fromCharCode(code_point)\n                } else {\n                    code_point -= 0x10000\n                    result += String.fromCharCode(0xd800 + ((code_point >> 10) & 0x3ff))\n                    result += String.fromCharCode(0xdc00 + (code_point & 0x3ff))\n                }\n            }\n        }\n        return result\n    }\n\n    /**\n     * @private\n     *\n     * @param code_point\n     */\n    private encoderError(code_point) {\n        console.log(1026, code_point)\n    }\n\n    /**\n     * @private\n     *\n     * @param fatal\n     * @param opt_code_point\n     * @returns\n     */\n    private decoderError(fatal, opt_code_point?): number {\n        if (fatal) {\n            console.log(1027)\n        }\n        return opt_code_point || 0xfffd\n    }\n\n    /**\n     * @private\n     */\n    private EOF_byte: number = -1\n    /**\n     * @private\n     */\n    private EOF_code_point: number = -1\n\n    /**\n     * @private\n     *\n     * @param a\n     * @param min\n     * @param max\n     */\n    private inRange(a, min, max) {\n        return min <= a && a <= max\n    }\n\n    /**\n     * @private\n     *\n     * @param n\n     * @param d\n     */\n    private div(n, d) {\n        return Math.floor(n / d)\n    }\n\n    /**\n     * @private\n     *\n     * @param string\n     */\n    private stringToCodePoints(string) {\n        /** @type {Array.<number>} */\n        let cps = []\n        // Based on http://www.w3.org/TR/WebIDL/#idl-DOMString\n        let i = 0,\n            n = string.length\n        while (i < string.length) {\n            let c = string.charCodeAt(i)\n            if (!this.inRange(c, 0xd800, 0xdfff)) {\n                cps.push(c)\n            } else if (this.inRange(c, 0xdc00, 0xdfff)) {\n                cps.push(0xfffd)\n            } else {\n                // (inRange(c, 0xD800, 0xDBFF))\n                if (i == n - 1) {\n                    cps.push(0xfffd)\n                } else {\n                    let d = string.charCodeAt(i + 1)\n                    if (this.inRange(d, 0xdc00, 0xdfff)) {\n                        let a = c & 0x3ff\n                        let b = d & 0x3ff\n                        i += 1\n                        cps.push(0x10000 + (a << 10) + b)\n                    } else {\n                        cps.push(0xfffd)\n                    }\n                }\n            }\n            i += 1\n        }\n        return cps\n    }\n}\n","// 装饰器\n\n/**\n * 往类里注射 __NAME__ 静态变量\n * @param name\n * @returns\n */\nexport function classname(name: string) {\n    return function (constructor: Function) {\n        constructor['__NAME__'] = name\n    }\n}\n","import { Button, Node, _decorator } from 'cc'\nimport { BoardSectionVO, EndingSectionVO } from '../data/SectionVO'\nimport { BaseSectionComponent } from './BaseSectionComponent'\nconst { ccclass, property } = _decorator\n\n@ccclass('EndingSection3Component')\nexport class EndingSection3Component extends BaseSectionComponent {\n    @property(Node)\n    btnBack: Node = null\n\n    @property(Node)\n    image1: Node = null\n\n    @property(Node)\n    image2: Node = null\n\n    @property(Node)\n    image3: Node = null\n\n    @property(Node)\n    btnNext: Node = null\n\n    get data(): EndingSectionVO {\n        return this._vo as EndingSectionVO\n    }\n\n    onLoaded() {\n        this.btnNext.active = false\n        this.btnBack.active = false\n        for (let i = 0; i < 3; i++) {\n            const image = this[`image${i + 1}`] as Node\n            if (image) {\n                image.active = i == this.getItemIndex()\n            }\n        }\n\n        let count = 0\n        const boardSectionId = this.data.boardSectionId\n        if (this.valueManager.getBoardFlag(boardSectionId, 'item_brocolli')) {\n            count += 1\n        }\n        if (this.valueManager.getBoardFlag(boardSectionId, 'item_orange')) {\n            count += 1\n        }\n        if (this.valueManager.getBoardFlag(boardSectionId, 'item_beer')) {\n            count += 1\n        }\n        if (count >= 2) {\n            this.btnBack.active = true\n        } else {\n            this.btnNext.active = true\n        }\n    }\n\n    dispose() {}\n\n    clickHome() {\n        super.clickNext(null, 'home')\n    }\n\n    private getItemIndex() {\n        const sectionVO = this.sectionManager.getSection(this.data.boardSectionId) as BoardSectionVO\n        for (let i = 0; i < sectionVO.items.length; i++) {\n            if (sectionVO.items[i].id == this.valueManager.curItemId) {\n                return i\n            }\n        }\n        return -1\n    }\n}\n","import { Button, Node, _decorator } from 'cc'\nimport { BoardSectionVO, EndingSectionVO } from '../data/SectionVO'\nimport { BaseSectionComponent } from './BaseSectionComponent'\nconst { ccclass, property } = _decorator\n\n@ccclass('EndingSectionComponent')\nexport class EndingSectionComponent extends BaseSectionComponent {\n    @property(Node)\n    btnBack: Node = null\n\n    @property(Node)\n    btn1: Node = null\n\n    @property(Node)\n    btn2: Node = null\n\n    @property(Node)\n    btn3: Node = null\n\n    @property(Node)\n    image1: Node = null\n\n    @property(Node)\n    image2: Node = null\n\n    @property(Node)\n    image3: Node = null\n\n    get data(): EndingSectionVO {\n        return this._vo as EndingSectionVO\n    }\n\n    onLoaded() {\n        this.btnBack.active = false\n        let count = 0\n        const map = this.valueManager.get(this.data.boardSectionId)\n        for (let i = 0; i < 3; i++) {\n            const image = this[`image${i + 1}`] as Node\n            if (image) {\n                image.active = i == this.getItemIndex()\n            }\n\n            const btn = this[`btn${i + 1}`] as Node\n            const key = this.data.items[i]\n            if (key) {\n                const flag = map[key]\n                if (flag) {\n                    btn && (btn.active = false)\n                } else {\n                    btn && (btn.active = true)\n                    count++\n                }\n            } else {\n                btn && (btn.active = false)\n            }\n        }\n        this.btnBack.active = count == 0\n    }\n\n    dispose() {}\n\n    clickWatchVideo() {\n        const url = this.data.videoUrls[this.getItemIndex()]\n        window.open(url)\n    }\n\n    private getItemIndex() {\n        const sectionVO = this.sectionManager.getSection(this.data.boardSectionId) as BoardSectionVO\n        for (let i = 0; i < sectionVO.items.length; i++) {\n            if (sectionVO.items[i].id == this.valueManager.curItemId) {\n                return i\n            }\n        }\n        return -1\n    }\n}\n","export enum ePriority {\n    /** 资源类型-配置表资源 */\n    CONFIG = 0,\n    /** 资源类型-模型资源 */\n    AVATAR = 1,\n    /** 资源类型-特效资源 */\n    EFFECT = 3,\n    /** 资源类型-UI资源 */\n    UI = 1,\n    /** 资源类型-其他 */\n    OTHER = 4\n}\n\n/** 文件扩展名类型 */\nexport const enum eFileType {\n    JPG = 'jpg',\n    JPEG = 'jpeg',\n    PNG = 'png',\n    ATLAS = 'atlas',\n    JSON = 'json',\n    SKELETON = 'skeleton',\n    PREFAB = 'prefab',\n    /** 粒子特效 */\n    PAR = 'plist',\n    /** 二进制文件 */\n    BIN = 'bin',\n    MP4 = 'mp4'\n}\n\nexport const enum eLoaderStatus {\n    /** The loader is ready to load and has not completed yet. **/\n    READY = 0,\n    /** The loader is actively in the process of loading. **/\n    LOADING = 1,\n    /** The loader has completed. **/\n    COMPLETED = 2,\n    /** The loader is paused. **/\n    PAUSE = 3,\n    /** The loader failed and did not load properly. **/\n    FAIL = 4,\n    /** The loader has been disposed. **/\n    DISPOSE = 5,\n    /** The loader has been cancled. **/\n    CANCLE = 6\n}\n\nexport const enum eLoaderType {\n    /** 文本类型，加载完成后返回文本。*/\n    TEXT = 'text',\n    /** JSON 类型，加载完成后返回json数据。*/\n    JSON = 'json',\n    /** XML 类型，加载完成后返回domXML。*/\n    XML = 'xml',\n    /** 二进制类型，加载完成后返回arraybuffer二进制数据。*/\n    BUFFER = 'arraybuffer',\n    /** spine骨骼动画类型，加载完成后返回skeletonData。*/\n    SKELETON = 'skeleton',\n    /** 预制体。*/\n    PREFAB = 'prefab',\n    /** 纹理类型，加载完成后返回SpriteFrame。*/\n    IMAGE = 'image',\n    /** 声音类型，加载完成后返回sound。*/\n    SOUND = 'sound',\n    /** 图集类型，加载完成后返回图集json信息(并创建图集内小图Texture)。*/\n    ATLAS = 'atlas',\n    /** 位图字体类型，加载完成后返回BitmapFont。*/\n    FONT = 'font',\n    /** TTF字体类型，加载完成后返回null。*/\n    TTF = 'ttf',\n    /** DATA 类型，加载完成后返回json数据。*/\n    DATA = 'data',\n    /** zip包类型，加载完成后返回null。*/\n    ZIP = 'zip',\n    /** 粒子类型，加载完成后返回null。*/\n    PAR = 'plist',\n    VIDEO = 'video'\n}\n\nexport class LoaderConfig {\n    /** 加载失败的尝试次数 */\n    static LOAD_FAILED_TRY_TIMES = 2\n    // /** 开始游戏时最大加载任务个数 */\n    // static GAME_START_CONNECTION = 20\n    /** 普通在游戏中的最大加载任务个数 */\n    static GAMING_CONNECTION = 5\n    /** 每次延长资源生命的时常 */\n    // static RES_RENEWAL_DURATION = 600000 //10 * 60 * 1000,\n    static SGIN_TYPE_DOT = '.'\n    static MAX_LIFE_TIME = 60000\n\n    // /** 等待二进制解析器处理的最大时长，秒 */\n    // static maxDurationForParser = 10\n    // /** 加载时长大于该值即继续队列里后面的加载 */\n    // static maxEplasedTimeToLoadNext = 8000\n    // /** 加载时长大于该值即放弃加载，当做加载失败处理 */\n    // static maxEplasedTimeToAbort = 30000\n}\n","/*\n * @Author: Blues\n * @Date: 2022-01-05 00:39:23\n * @LastEditTime: 2022-01-05 17:13:34\n * @LastEditors: Blues\n * @Description:\n */\nimport { EventDispatcher } from './EventDispatcher'\nimport { MaouEvent } from './MaouEvent'\n\nconst $singleton = Symbol('singleton')\n\n/**\n * 事件中心\n */\nexport default class EventCenter extends EventDispatcher {\n    private static _me: EventCenter = null\n\n    /**\n     * EventCenter 是单例模式，不要试图实例化。\n     * @param {Symbol} symbol\n     */\n    constructor(symbol) {\n        if (symbol !== $singleton) {\n            throw new Error('不能实例化 EventCenter 类，因为 EventCenter 是单例模式，请使它的静态方法。')\n        }\n        super()\n    }\n\n    /**\n     * 获得 EventCenter 的单例\n     * @returns {EventCenter}\n     */\n    public static get me() {\n        if (this._me == null) {\n            this._me = new EventCenter($singleton)\n        }\n        return this._me\n    }\n\n    public static Register(type, listener, thisObj = null, priority = 0) {\n        this.me.addEventListener(type, listener, thisObj, priority)\n    }\n\n    public static Unregister(type, listener) {\n        this.me.removeEventListener(type, listener)\n    }\n\n    public static Send(event: MaouEvent, target = null) {\n        // 设置target\n        if (target !== null && target !== undefined) {\n            event.target = target\n        }\n\n        this.me.dispatchEvent(event)\n    }\n}\n","import { MaouEvent } from './MaouEvent'\n\nexport interface IListener {\n    (event: MaouEvent): void\n}\n\nclass Listener {\n    fn: IListener = null\n    thisObj: object = null\n    priority = 0\n    once = false\n\n    constructor(fn: IListener, thisObj: object, priority = 0, once = false) {\n        this.fn = fn\n        this.thisObj = thisObj\n        this.priority = priority\n        this.once = once\n    }\n}\n\nexport interface IEventDispatcher {\n    dispatchEvent(event: MaouEvent): void\n    dispatchEventWith(type: string, data?: object): void\n    addEventListener(type: string, listener: IListener, thisObj?: object, priority?: number): void\n    once(type: string, listener: IListener, thisObj?: object, priority?: number): void\n    removeEventListener(type: string, listener: IListener)\n    removeAll()\n    hasEventListener(type): boolean\n    removeTargetListener(target: object): void\n}\n\nexport class EventDispatcher implements IEventDispatcher {\n    private _target: object = null\n    private _listenerMap: Map<string, Listener[]> = null\n\n    /**\n     * 创建一个 EventDispatcher 类的实例。\n     *\n     * @param target 此 EventDispatcher 所抛出事件对象的 target 指向。\n     * 此参数主要用于一个实现了 IEventDispatcher 接口的自定义类，\n     * 以便抛出的事件对象的 target 属性可以指向自定义类自身。\n     * 请勿在直接继承 EventDispatcher 的情况下使用此参数。\n     */\n    constructor(target = null) {\n        this._listenerMap = new Map()\n        this._target = target\n    }\n\n    /**\n     * 派发事件\n     * @param {MaouEvent} event 调度到事件流中的 Event 对象。\n     */\n    public dispatchEvent(event: MaouEvent): void {\n        if (!this.hasEventListener(event.type)) {\n            return\n        }\n\n        // 设置target\n        if (event.target === null) {\n            if (this._target !== null) {\n                event.target = this._target\n            } else {\n                event.target = this\n            }\n        }\n\n        const listenerList = this._listenerMap.get(event.type).concat()\n        listenerList.forEach((listener) => {\n            const { fn, thisObj } = listener\n\n            if (listener.once) {\n                this.removeEventListener(event.type, fn)\n            }\n\n            if (thisObj) {\n                fn.call(thisObj, event)\n            } else {\n                fn.call(this, event)\n            }\n        }, this)\n\n        // 回收Event\n        MaouEvent.Recycle(event)\n    }\n\n    public dispatchEventWith(type: string, data = null): void {\n        this.dispatchEvent(MaouEvent.Create(MaouEvent, type, data))\n    }\n\n    /**\n     * 使用 EventDispatcher 对象注册事件侦听器对象，以使侦听器能够接收事件通知。\n     * @param {string} type 事件的类型。\n     * @param {(event: MaouEvent) => void} listener 处理事件的侦听器函数。此函数必须接受 Event 对象作为其唯一的参数，并且不能返回任何结果，如下面的示例所示： function(evt:Event):void 函数可以有任何名称。\n     * @param {{}} thisObj 侦听函数绑定的this对象\n     * @param {number} priority 事件侦听器的优先级。优先级由一个带符号整数指定。数字越大，优先级越高。优先级为 n 的所有侦听器会在优先级为 n -1 的侦听器之前得到处理。如果两个或更多个侦听器共享相同的优先级，则按照它们的添加顺序进行处理。默认优先级为 0。\n     */\n    public addEventListener(type: string, listener: IListener, thisObj: object = null, priority = 0): void {\n        this._addEventListener(type, listener, thisObj, priority)\n    }\n\n    /**\n     * 添加仅回调一次的事件侦听器，此方法与addEventListener()方法不同，addEventListener()方法会持续产生回调，而此方法在第一次回调时就会自动移除监听。\n     * @param {string|Symbol} type 事件的类型。\n     * @param {function} listener 处理事件的侦听器函数。此函数必须接受 Event 对象作为其唯一的参数，并且不能返回任何结果，如下面的示例所示： function(evt:Event):void 函数可以有任何名称。\n     * @param {{}} thisObj 侦听函数绑定的this对象\n     * @param {number} priority 事件侦听器的优先级。优先级由一个带符号整数指定。数字越大，优先级越高。优先级为 n 的所有侦听器会在优先级为 n -1 的侦听器之前得到处理。如果两个或更多个侦听器共享相同的优先级，则按照它们的添加顺序进行处理。默认优先级为 0。\n     */\n    public once(type: string, listener: IListener, thisObj: object = null, priority = 0): void {\n        this._addEventListener(type, listener, thisObj, priority, true)\n    }\n\n    private _addEventListener(type: string, listener: IListener, thisObj = null, priority = 0, once = false): void {\n        if (!this.hasEventListener(type)) {\n            this._listenerMap.set(type, [])\n        }\n\n        const listeners = this._listenerMap.get(type)\n\n        for (let i = 0; i < listeners.length; i++) {\n            if (listeners[i].fn === listener) {\n                //已经注册过了\n                //判断是否修改了优先级\n                if (listeners[i].priority !== priority) {\n                    listeners[i].priority = priority\n                    listeners.sort((a, b) => {\n                        return b.priority - a.priority\n                    })\n                }\n                return\n            }\n        }\n\n        listeners.push(new Listener(listener, thisObj, priority, once))\n        listeners.sort((a, b) => {\n            return b.priority - a.priority\n        })\n    }\n\n    /**\n     * 从 EventDispatcher 对象中删除侦听器。\n     * @param {string|Symbol} type 事件的类型。\n     * @param {function} listener 要删除的侦听器对象。\n     */\n    public removeEventListener(type: string, listener: IListener): void {\n        if (!this.hasEventListener(type)) {\n            return\n        }\n\n        const listeners = this._listenerMap.get(type)\n        for (let i = listeners.length - 1; i >= 0; i--) {\n            if (listeners[i].fn === listener) {\n                listeners.splice(i, 1)\n                break\n            }\n        }\n\n        if (listeners.length === 0) {\n            this._listenerMap.delete(type)\n        }\n    }\n\n    public removeTargetListener(target: object): void {\n        const keys = this._listenerMap.keys()\n        const evtTypes = Array.from(keys)\n        for (let i = 0; i < evtTypes.length; i++) {\n            const evtType = evtTypes[i]\n            const listeners = this._listenerMap.get(evtType)\n            for (let j = listeners.length - 1; j >= 0; j--) {\n                if (listeners[j].thisObj === target) {\n                    this.removeEventListener(evtType, listeners[j].fn)\n                }\n            }\n        }\n    }\n\n    /**\n     * 从 EventDispatcher 对象中删除全部侦听器。\n     */\n    public removeAll(): void {\n        this._listenerMap.clear()\n    }\n\n    /**\n     * 检查 EventDispatcher 对象是否为特定事件类型注册了任何侦听器。\n     */\n    public hasEventListener(type): boolean {\n        return this._listenerMap.has(type)\n    }\n}\n","import { ImageAsset, resources, VideoPlayer, _decorator } from 'cc'\nimport { VideoSectionVO } from '../data/SectionVO'\nimport { GameManager } from '../manager/GameManager'\n// import { VideoSectionVO } from '../data/SectionVO'\nimport { BaseSectionComponent } from './BaseSectionComponent'\nconst { ccclass, property } = _decorator\n\n@ccclass('FullVideoSectionComponent')\nexport class FullVideoSectionComponent extends BaseSectionComponent {\n    get data(): VideoSectionVO {\n        return this._vo as VideoSectionVO\n    }\n\n    onLoaded() {\n        const videoEle = window.document.createElement('video')\n        videoEle.src = 'https://p-games.silversea-media.net/Videos/Nanoex%20Smoke%20Animation%20Empty%20Tray.mp4'\n        window.document.body.appendChild(videoEle)\n        videoEle.id = 'CocosVideo'\n        videoEle.style.position = 'absolute'\n        videoEle.style.width = '100%'\n        videoEle.style.height = '100%'\n        videoEle.loop = true\n        videoEle.oncanplay = () => {\n            videoEle.play()\n        }\n        const self = this\n        GameManager.me.showHtmlNextBtn(() => {\n            self.clickNext()\n        })\n\n        this.showLogo()\n        this.showText()\n    }\n\n    run() {}\n\n    dispose() {\n        this.hideHtmlNextBtn()\n        this.hideLogo()\n        this.hideText()\n        this.hideVideo()\n    }\n\n    showHtmlNextBtn(clickCallback: () => void) {\n        let loadBtnImage = (cb: (src: string) => void) => {\n            resources.load('product/PrimeFreeze/image/btn_next_2', (err, data: ImageAsset) => {\n                const currentSrc = data.data['currentSrc']\n                cb(currentSrc)\n            })\n        }\n\n        let imgEle = window.document.getElementById('NextBtn')\n        if (!imgEle) {\n            loadBtnImage((currentSrc) => {\n                console.log(`currentSrc: ${currentSrc}`)\n                const videoW = 1920\n                const videoH = 1080\n                const videoEle = window.document.getElementById('CocosVideo')\n                const scale = window.document.body.clientWidth / videoW\n                const videoEleWidth = videoW * scale\n                const videoEleHeight = videoH * scale\n                const bodyWidth = window.document.body.clientWidth\n                const bodyHeight = window.document.body.clientHeight\n                const right = (bodyWidth - videoEleWidth) / 2\n                const bottom = (bodyHeight - videoEleHeight) / 2\n\n                const imgEle = window.document.createElement('img')\n                imgEle.id = 'NextBtn'\n                imgEle.src = currentSrc\n                imgEle.style.position = 'absolute'\n                imgEle.width = 88 * scale\n                imgEle.height = 88 * scale\n                imgEle.style.right = `${right + 35 * scale}px`\n                imgEle.style.bottom = `${bottom + 35 * scale}px`\n                window.document.body.appendChild(imgEle)\n                imgEle.onclick = clickCallback\n            })\n        } else {\n            imgEle.style.visibility = 'visible'\n            imgEle.onclick = clickCallback\n        }\n    }\n\n    hideHtmlNextBtn() {\n        // let imgEle = window.document.getElementById('NextBtn')\n        // window.document.body.removeChild(imgEle)\n        GameManager.me.hideHtmlNextBtn()\n    }\n\n    showLogo() {\n        let loadBtnImage = (cb: (src: string) => void) => {\n            resources.load('product/PrimeFreeze/image/Logo_2', (err, data: ImageAsset) => {\n                const currentSrc = data.data['currentSrc']\n                cb(currentSrc)\n            })\n        }\n\n        let imgEle = window.document.getElementById('Logo')\n        if (!imgEle) {\n            loadBtnImage((currentSrc) => {\n                console.log(`currentSrc: ${currentSrc}`)\n                const videoW = 1920\n                const videoH = 1080\n                const scale = window.document.body.clientWidth / videoW\n                const videoEleWidth = videoW * scale\n                const videoEleHeight = videoH * scale\n                const bodyWidth = window.document.body.clientWidth\n                const bodyHeight = window.document.body.clientHeight\n                const right = (bodyWidth - videoEleWidth) / 2\n                const top = (bodyHeight - videoEleHeight) / 2\n\n                const imgEle = window.document.createElement('img')\n                imgEle.id = 'Logo'\n                imgEle.src = currentSrc\n                imgEle.style.position = 'absolute'\n                imgEle.width = 371 * scale\n                imgEle.height = 69 * scale\n                imgEle.style.right = `${right + 20 * scale}px`\n                imgEle.style.top = `${top + 35 * scale}px`\n                window.document.body.appendChild(imgEle)\n            })\n        } else {\n            imgEle.style.visibility = 'visible'\n        }\n    }\n\n    hideLogo() {\n        let imgEle = window.document.getElementById('Logo')\n        window.document.body.removeChild(imgEle)\n    }\n\n    showText() {\n        let loadBtnImage = (cb: (src: string) => void) => {\n            resources.load('product/PrimeFreeze/image/text_1', (err, data: ImageAsset) => {\n                const currentSrc = data.data['currentSrc']\n                cb(currentSrc)\n            })\n        }\n\n        let imgEle = window.document.getElementById('VideoText')\n        if (!imgEle) {\n            loadBtnImage((currentSrc) => {\n                console.log(`currentSrc: ${currentSrc}`)\n                const videoW = 1920\n                const videoH = 1080\n                const scale = window.document.body.clientWidth / videoW\n                const videoEleWidth = videoW * scale\n                const videoEleHeight = videoH * scale\n                const bodyWidth = window.document.body.clientWidth\n                const bodyHeight = window.document.body.clientHeight\n                const right = (bodyWidth - videoEleWidth) / 2\n                const top = (bodyHeight - videoEleHeight) / 2\n\n                const imgEle = window.document.createElement('img')\n                imgEle.id = 'VideoText'\n                imgEle.src = currentSrc\n                imgEle.style.position = 'absolute'\n                imgEle.width = 765 * scale\n                imgEle.height = 190 * scale\n                imgEle.style.right = `${(videoEleWidth - imgEle.width) / 2}px`\n                imgEle.style.top = `${top + 350 * scale}px`\n                window.document.body.appendChild(imgEle)\n            })\n        } else {\n            imgEle.style.visibility = 'visible'\n        }\n    }\n\n    hideText() {\n        let imgEle = window.document.getElementById('VideoText')\n        window.document.body.removeChild(imgEle)\n    }\n\n    hideVideo() {\n        let ele = window.document.getElementById('CocosVideo')\n        window.document.body.removeChild(ele)\n    }\n}\n","import { ImageAsset, resources } from 'cc'\nimport { LayerManager } from './LayerManager'\nimport { SectionManager } from './SectionManager'\nimport { ValueManager } from './ValueManager'\n\nexport class GameManager {\n    private static _instance: GameManager = null\n    private _valueManager: ValueManager = null\n    private _sectionManager: SectionManager = null\n    private _layerManager: LayerManager = null\n\n    private _htmlBG: HTMLElement\n    private _htmlCloseBtn: HTMLElement\n    private _htmlNextBtn: HTMLElement\n    private _htmlBackBtn: HTMLElement\n    private _gameFrame: HTMLElement\n\n    static get me(): GameManager {\n        if (this._instance == null) {\n            this._instance = new GameManager()\n        }\n        return this._instance\n    }\n\n    constructor() {\n        this._valueManager = new ValueManager()\n        this._sectionManager = new SectionManager()\n        this._layerManager = new LayerManager()\n\n        this._htmlBG = window.parent.document.getElementById('Background')\n        this._htmlCloseBtn = window.parent.document.getElementById('CloseBtn')\n        this._htmlNextBtn = window.parent.document.getElementById('NextBtn')\n        this._htmlBackBtn = window.parent.document.getElementById('BackBtn')\n        this._gameFrame = window.parent.document.getElementById('GameFrame')\n\n        this.showHtmlCloseBtn(() => {\n            window.close()\n        })\n    }\n\n    get sectionManger(): SectionManager {\n        return this._sectionManager\n    }\n\n    get layerManager(): LayerManager {\n        return this._layerManager\n    }\n\n    get valueManager(): ValueManager {\n        return this._valueManager\n    }\n\n    showHtmlCloseBtn(clickCallback: () => void) {\n        // if (window.location.hostname == 'localhost') {\n        //     let loadBtnImage = (cb: (src: string) => void) => {\n        //         resources.load('product/PrimeFreeze/image/btn_close', (err, data: ImageAsset) => {\n        //             const currentSrc = data.data['currentSrc']\n        //             cb(currentSrc)\n        //         })\n        //     }\n        //     let imgEle = window.document.getElementById('CocosCloseBtn')\n        //     if (!imgEle) {\n        //         loadBtnImage((currentSrc) => {\n        //             console.log(`currentSrc: ${currentSrc}`)\n        //             const gameDiv = window.document.getElementById('GameDiv')\n        //             const gameDivWidth = Number(gameDiv.style.width.split('px')[0])\n        //             const gameDivHeight = Number(gameDiv.style.height.split('px')[0])\n        //             const bodyWidth = window.document.body.clientWidth\n        //             const bodyHeight = window.document.body.clientHeight\n        //             const right = (bodyWidth - gameDivWidth) / 2\n        //             const top = (bodyHeight - gameDivHeight) / 2\n        //             console.log('showHtmlCloseBtn:', gameDivWidth, gameDivHeight, bodyWidth, bodyHeight)\n        //             const scale = gameDivWidth / 1540\n        //             const imgEle = window.document.createElement('img')\n        //             imgEle.id = 'CocosCloseBtn'\n        //             imgEle.src = currentSrc\n        //             imgEle.style.position = 'absolute'\n        //             imgEle.width = 70 * scale\n        //             imgEle.height = 70 * scale\n        //             imgEle.style.right = `${right - 35 * scale}px`\n        //             imgEle.style.top = `${top - 35 * scale}px`\n        //             // gameDiv.appendChild(imgEle)\n        //             window.document.body.appendChild(imgEle)\n        //             imgEle.onclick = clickCallback\n        //         })\n        //     } else {\n        //         imgEle.style.visibility = 'visible'\n        //         imgEle.onclick = clickCallback\n        //     }\n        //     return\n        // }\n        // if (this._htmlCloseBtn) {\n        //     this._htmlCloseBtn.style.visibility = 'visible'\n        //     this._htmlCloseBtn.onclick = clickCallback\n        // }\n    }\n\n    hideHtmlCloseBtn() {\n        // if (window.location.hostname == 'localhost') {\n        //     let imgEle = window.document.getElementById('CocosCloseBtn')\n        //     if (imgEle) {\n        //         imgEle.style.visibility = 'hidden'\n        //         imgEle.onclick = null\n        //     }\n        // } else {\n        //     if (this._htmlCloseBtn) {\n        //         this._htmlCloseBtn.style.visibility = 'hidden'\n        //         this._htmlCloseBtn.onclick = null\n        //     }\n        // }\n    }\n\n    showHtmlBg() {\n        if (this._htmlBG) {\n            this._htmlBG.style.visibility = 'visible'\n        }\n    }\n    hideHtmlBg() {\n        if (this._htmlBG) {\n            this._htmlBG.style.visibility = 'hidden'\n        }\n    }\n\n    showHtmlNextBtn(clickCallback: () => void) {\n        if (window.location.hostname == 'localhost') {\n            let loadBtnImage = (cb: (src: string) => void) => {\n                resources.load('product/PrimeFreeze/image/btn_next_2', (err, data: ImageAsset) => {\n                    const currentSrc = data.data['currentSrc']\n                    cb(currentSrc)\n                })\n            }\n\n            let imgEle = window.document.getElementById('NextBtn')\n            if (!imgEle) {\n                loadBtnImage((currentSrc) => {\n                    console.log(`currentSrc: ${currentSrc}`)\n                    const gameDiv = window.document.getElementById('GameDiv')\n                    const gameDivWidth = Number(gameDiv.style.width.split('px')[0])\n                    console.log(`gameDivWidth: ${gameDivWidth}`)\n                    const scale = gameDivWidth / 1540\n                    const imgEle = window.document.createElement('img')\n                    imgEle.id = 'NextBtn'\n                    imgEle.src = currentSrc\n                    imgEle.style.position = 'absolute'\n                    imgEle.width = 88 * scale\n                    imgEle.height = 88 * scale\n                    imgEle.style.right = '10px'\n                    imgEle.style.bottom = '10px'\n                    imgEle.style.zIndex = '1000'\n                    gameDiv.appendChild(imgEle)\n                    imgEle.onclick = clickCallback\n                })\n            } else {\n                imgEle.style.visibility = 'visible'\n                imgEle.onclick = clickCallback\n            }\n            return\n        }\n\n        if (this._htmlNextBtn) {\n            this._htmlNextBtn.style.visibility = 'visible'\n            this._htmlNextBtn.onclick = clickCallback\n        }\n    }\n\n    hideHtmlNextBtn() {\n        let imgEle = window.document.getElementById('NextBtn')\n        if (imgEle) {\n            imgEle.style.visibility = 'hidden'\n            imgEle.onclick = null\n        } else {\n            this._htmlNextBtn.style.visibility = 'hidden'\n            this._htmlNextBtn.onclick = null\n        }\n    }\n\n    hideGame() {\n        if (this._gameFrame) {\n            this._gameFrame.style.visibility = 'hidden'\n        }\n    }\n    showGame() {\n        if (this._gameFrame) {\n            this._gameFrame.style.visibility = 'visible'\n        }\n    }\n\n    showHtmlBackBtn(clickCallback: () => void) {\n        if (window.location.hostname == 'localhost') {\n            return\n        }\n\n        if (this._htmlBackBtn) {\n            this._htmlBackBtn.style.visibility = 'visible'\n            this._htmlBackBtn.onclick = clickCallback\n        }\n    }\n\n    hideHtmlBackBtn() {\n        if (this._htmlBackBtn) {\n            this._htmlBackBtn.style.visibility = 'hidden'\n            this._htmlBackBtn.onclick = null\n        }\n    }\n}\n","/**\n * <p><code>Handler</code> 是事件处理器类。</p>\n * <p>推荐使用 Handler.create() 方法从对象池创建，减少对象创建消耗。创建的 Handler 对象不再使用后，可以使用 Handler.recover() 将其回收到对象池，回收后不要再使用此对象，否则会导致不可预料的错误。</p>\n * <p><b>注意：</b>由于鼠标事件也用本对象池，不正确的回收及调用，可能会影响鼠标事件的执行。</p>\n */\nexport default class Handler {\n    /* [DISABLE-ADD-VARIABLE-DEFAULT-VALUE]*/\n\n    /** @private handler对象池*/\n    private static _pool: Handler[] = []\n\n    /** @private */\n    private static _gid: number = 1\n\n    /** 执行域(this)。*/\n    public caller: any\n\n    /** 处理方法。*/\n    public method: Function\n\n    /** 参数。*/\n    public args: any[]\n\n    /** 表示是否只执行一次。如果为true，回调后执行recover()进行回收，回收后会被再利用，默认为false 。*/\n    public once: boolean = false\n\n    protected _id: number = 0\n\n    /**\n     * 根据指定的属性值，创建一个 <code>Handler</code> 类的实例。\n     * @param\tcaller 执行域。\n     * @param\tmethod 处理函数。\n     * @param\targs 函数参数。\n     * @param\tonce 是否只执行一次。\n     */\n    constructor(caller: any = null, method: Function = null, args: any[] = null, once: boolean = false) {\n        this.setTo(caller, method, args, once)\n    }\n\n    /**\n     * 设置此对象的指定属性值。\n     * @param\tcaller 执行域(this)。\n     * @param\tmethod 回调方法。\n     * @param\targs 携带的参数。\n     * @param\tonce 是否只执行一次，如果为true，执行后执行recover()进行回收。\n     * @return  返回 handler 本身。\n     */\n    public setTo(caller: any, method: Function, args: any[], once: boolean): Handler {\n        this._id = Handler._gid++\n        this.caller = caller\n        this.method = method\n        this.args = args\n        this.once = once\n        return this\n    }\n\n    /**\n     * 执行处理器。\n     */\n    public run(): any {\n        if (this.method == null) {\n            return null\n        }\n        if (this._id == 0) {\n            throw new Error('执行处于已回收状态的Handler，不可以！')\n        }\n        let id: number = this._id\n        let result: any = this.method.apply(this.caller, this.args)\n        this._id === id && this.once && this.recover()\n        return result\n    }\n\n    /**\n     * 执行处理器，携带额外数据。\n     * @param\tdata 附加的回调数据，可以是单数据或者Array(作为多参)。\n     */\n    public runWith(data: any): any {\n        if (this.method == null) {\n            return null\n        }\n        if (this._id == 0) {\n            throw new Error('执行处于已回收状态的Handler，不可以！')\n        }\n        let id: number = this._id\n        let result: any\n\n        if (data == null) {\n            result = this.method.apply(this.caller, this.args)\n        } else if (!this.args && !(data instanceof Array)) {\n            /* [IF-FLASH]*/\n            result = this.method.call(this.caller, data)\n        }\n        // [IF-JS] else if (!args && !data.unshift) result= method.call(caller, data);\n        else if (this.args) {\n            result = this.method.apply(this.caller, this.args.concat(data))\n        } else {\n            result = this.method.apply(this.caller, data)\n        }\n        this._id === id && this.once && this.recover()\n        return result\n    }\n\n    /**\n     * 清理对象引用。\n     */\n    public clear(): Handler {\n        this.caller = null\n        this.method = null\n        this.args = null\n        return this\n    }\n\n    /**\n     * 清理并回收到 Handler 对象池内。\n     */\n    public recover(): void {\n        if (this._id > 0) {\n            this._id = 0\n            Handler._pool.push(this.clear())\n        }\n    }\n\n    /**\n     * 从对象池内创建一个Handler，默认会执行一次并立即回收，如果不需要自动回收，设置once参数为false。\n     * @param\tcaller 执行域(this)。\n     * @param\tmethod 回调方法。\n     * @param\targs 携带的参数。\n     * @param\tonce 是否只执行一次，如果为true，回调后执行recover()进行回收，默认为true。\n     * @return  返回创建的handler实例。\n     */\n    public static create(caller: any, method: Function, args: Array<any> = null, once: boolean = true): Handler {\n        if (Handler._pool.length) {\n            return Handler._pool.shift().setTo(caller, method, args, once)\n        }\n        return new Handler(caller, method, args, once)\n    }\n\n    /** @private */\n    public get id(): number {\n        return this._id\n    }\n}\n","import { resources, SpriteFrame } from 'cc'\nimport { ILoader } from './ILoader'\nimport LoaderVO from './LoaderVO'\n\n/*\n * @Author: Blues\n * @Date: 2021-11-21 13:34:38\n * @LastEditTime: 2022-01-07 19:17:34\n * @LastEditors: Blues\n * @Description:\n */\nexport default class ImageLoader implements ILoader {\n    load(vo: LoaderVO) {\n        vo.finalLoadURL = vo.path + '/' + 'spriteFrame'\n        resources.load(\n            vo.finalLoadURL,\n            SpriteFrame,\n            (finished, total) => {\n                vo.setProgress(finished / total)\n            },\n            (err, content) => {\n                if (err != null) {\n                    console.error('[imageLoader]', err)\n                    vo.fail(err)\n                } else {\n                    vo.complete(content)\n                }\n            }\n        )\n    }\n}\n","import { _decorator, Component, Node, director, Camera, color } from 'cc'\nimport { GameManager } from './manager/GameManager'\nimport { SectionManager } from './manager/SectionManager'\nimport { eFileType, eLoaderStatus, eLoaderType, ePriority } from './maou/asset/loader/EnumLoader'\nimport { AssetManager } from './maou/asset/AssetManager'\nimport { MaouCore } from './maou/core/MaouCore'\nconst { ccclass, property } = _decorator\n\n@ccclass('MainScene')\nexport class Index extends Component {\n    @property(Node)\n    canvas: Node = null\n\n    @property(Camera)\n    camera: Camera = null\n\n    constructor() {\n        super()\n    }\n\n    start() {\n        MaouCore.Reset()\n\n        GameManager.me.layerManager.init(this.canvas)\n\n        AssetManager.me.load(\n            'common/open_button/open_button-0.plist',\n            this,\n            () => {\n                GameManager.me.sectionManger.enter('section_index')\n            },\n            null,\n            null,\n            eFileType.ATLAS\n        )\n\n        // GameManager.me.sectionManger.enter('section_chicken_video')\n        // GameManager.me.sectionManger.enter('section_chicken_slider')\n        // GameManager.me.sectionManger.enter('section_board_1')\n        // GameManager.me.sectionManger.enter('section_fullvideo')\n    }\n}\n","import { JsonAsset, resources } from 'cc'\nimport BaseCache from './BaseCache'\n\nexport default class JsonCache extends BaseCache {\n    public get data(): JsonAsset {\n        return this._data as JsonAsset\n    }\n\n    public get json(): object {\n        return this.data ? this.data.json : null\n    }\n\n    protected addRef() {\n        this.data && this.data.addRef()\n    }\n\n    protected decRef() {\n        this.data && this.data.decRef()\n    }\n\n    public get refCount(): number {\n        return this.data == null ? 0 : this.data.refCount\n    }\n\n    /**\n     * 实际销毁，从内存中清除\n     */\n    public destroy(): void {\n        if (this._data != null && this._data instanceof JsonAsset) {\n            resources.release(this._finalURL, JsonAsset)\n            // assetManager.releaseAsset(this._data)\n            this._data.destroy()\n            this._data = null\n        }\n        this._isDisposed = true\n    }\n}\n","import { JsonAsset, resources } from 'cc'\nimport { ILoader } from './ILoader'\nimport LoaderVO from './LoaderVO'\n\nexport default class JsonLoader implements ILoader {\n    load(vo: LoaderVO) {\n        vo.finalLoadURL = vo.path\n        resources.load(\n            vo.finalLoadURL,\n            JsonAsset,\n            (finished, total) => {\n                vo.setProgress(finished / total)\n            },\n            (err, content) => {\n                if (err != null) {\n                    console.error('[JsonLoader]', err)\n                    vo.fail(err)\n                } else {\n                    vo.complete(content)\n                }\n            }\n        )\n    }\n}\n","import { Node } from 'cc'\n\nexport class LayerManager {\n    mainContainer: Node = null\n\n    init(sceneNode: Node) {\n        this.mainContainer = sceneNode.getChildByName('MainContainer')\n    }\n}\n","import { EventDispatcher } from '../../event/EventDispatcher'\nimport { MaouEvent } from '../../event/MaouEvent'\nimport { Utils } from '../../util/Utils'\nimport LoadEvent from '../events/LoadEvent'\nimport { eLoaderStatus, ePriority } from './EnumLoader'\n\n/**\n * 表示一个加载\n */\nexport default class LoaderVO extends EventDispatcher {\n    private _status: eLoaderStatus = eLoaderStatus.READY\n    private _progress: number = 0\n\n    /** 带有后缀名的url*/\n    public url: string\n    public property: number\n    public tryTimes: number = 0\n    public counter: number = 0\n    private _content: object = null\n    private _error: Error = null\n\n    /**\n     *\n     * 文件类型\n     * @type {EnumFileType}\n     */\n    public fileType: string = ''\n\n    /**\n     *\n     * 加载类型\n     * @type {string}\n     */\n    public loadType: string\n    public startLoadTime: number\n    public longTimeTag: number\n\n    /**\n     * 最终加载时候的url，这个url用在资源销毁的时候\n     *\n     * @type {string}\n     */\n    public finalLoadURL: string\n\n    private _path: string\n\n    public reuse(): void {\n        this._status = eLoaderStatus.READY\n    }\n\n    /** 加载失败，状态变为：FAIL，会派发：LoadEvent.FAIL */\n    public fail(err?: Error): void {\n        if (this._status == eLoaderStatus.DISPOSE) {\n            return\n        }\n\n        this._status = eLoaderStatus.FAIL\n        this._error = err\n\n        // 派发 FAIL 事件\n        this.dispatchEvent(MaouEvent.Create(LoadEvent, LoadEvent.FAIL))\n    }\n\n    /** 更新加载进度，状态变为：LOADING，会派发：LoadEvent.LOADING */\n    public setProgress(v: number): void {\n        if (this._status == eLoaderStatus.DISPOSE) {\n            return\n        }\n        this._status = eLoaderStatus.LOADING\n        this._progress = v\n\n        // 派发 PROGRESS 事件\n        this.dispatchEvent(MaouEvent.Create(LoadEvent, LoadEvent.PROGRESS))\n    }\n\n    /** 加载完成，状态变为：COMPLETED，会派发：LoadEvent.COMPLETE */\n    public complete(content: object): void {\n        if (this._status == eLoaderStatus.DISPOSE) {\n            return\n        }\n        this._status = eLoaderStatus.COMPLETED\n        this._content = content\n\n        // 派发 COMPLETE 事件\n        const evt = MaouEvent.Create(LoadEvent, LoadEvent.COMPLETE)\n        this.dispatchEvent(evt)\n    }\n\n    /** 加载完成后调用该方法，会派发：LoadEvent.CHECK_TASK， LoadTask 会监听该事件 */\n    public checkTask(): void {\n        // 派发 CHECK_TASK 事件\n        const evt = MaouEvent.Create(LoadEvent, LoadEvent.CHECK_TASK)\n        this.dispatchEvent(evt)\n    }\n\n    protected dispose(): void {\n        this._status = eLoaderStatus.DISPOSE\n        this.property = this._progress = this.counter = this.tryTimes = this.startLoadTime = this.longTimeTag = 0\n        this.fileType = this._error = this._content = this.url = this.loadType = this._path = null\n        this.removeAll()\n    }\n\n    public get status(): eLoaderStatus {\n        return this._status\n    }\n\n    public get progress(): number {\n        return this._progress\n    }\n\n    public get content(): object {\n        return this._content\n    }\n\n    public get error(): Error {\n        return this._error\n    }\n\n    public get disposed(): boolean {\n        return this._status == eLoaderStatus.DISPOSE\n    }\n\n    /**\n     *\n     * 不带后缀名的文件路径，比url 少文件类型后缀\n     * @readonly\n     * @type {string}\n     */\n    public get path(): string {\n        if (!this._path) {\n            this._path = Utils.getPath(this.url)\n        }\n\n        return this._path\n    }\n\n    public getFileType(): string {\n        let ret: string\n        if (this.fileType) {\n            ret = this.fileType\n        } else if (this.url) {\n            this.fileType = Utils.getFileExtension(this.url)\n            ret = this.fileType\n        }\n\n        return ret\n    }\n\n    // --------------- LoaderVO 对象池方法 start --------------- //\n    private static _loaderVOPool: Array<LoaderVO> = []\n\n    public static Create(url: string, property: number = ePriority.UI): LoaderVO {\n        let ret: LoaderVO = this.GetLoaderVO()\n        ret.url = url\n        ret.property = property\n        return ret\n    }\n\n    private static GetLoaderVO(): LoaderVO {\n        let vo: LoaderVO\n        if (this._loaderVOPool.length) {\n            vo = this._loaderVOPool.shift()\n            vo.reuse()\n        } else {\n            vo = new LoaderVO()\n        }\n        return vo\n    }\n\n    /** 回收，状态会变为：DISPOSE */\n    public static Recycle(vo: LoaderVO): void {\n        if (this._loaderVOPool.indexOf(vo) == -1) {\n            this._loaderVOPool.push(vo)\n            vo.dispose()\n        }\n    }\n    // --------------- LoaderVO 对象池方法 end --------------- //\n}\n","/*\n * @Author: Blues\n * @Date: 2022-01-05 17:46:36\n * @LastEditTime: 2022-01-07 15:55:30\n * @LastEditors: Blues\n * @Description:\n */\n\nimport { MaouEvent } from '../../event/MaouEvent'\nimport { classname } from '../../util/Decorators'\n\nclassname('LoadEvent')\nexport default class LoadEvent extends MaouEvent {\n    /** 加载完成 */\n    public static COMPLETE = 'COMPLETE'\n    public static PROGRESS = 'PROGRESS'\n    public static FAIL = 'FAIL'\n\n    /** 检查 task 是否完成 */\n    public static CHECK_TASK = 'CHECK_TASK'\n\n    constructor(type: string) {\n        super(type)\n    }\n}\n","import { EventDispatcher } from '../../event/EventDispatcher'\nimport { MaouEvent } from '../../event/MaouEvent'\nimport LoadEvent from '../events/LoadEvent'\nimport TaskEvent from '../events/TaskEvent'\nimport { eLoaderStatus } from './EnumLoader'\nimport LoaderVO from './LoaderVO'\n\n/**\n * 表示一个加载任务请求\n */\nexport default class LoadTask extends EventDispatcher {\n    private static _loadTaskPool: Array<LoadTask> = []\n    private static _idCounter = 0\n\n    public id: number\n    public thisObj: object = null\n    public onCompleteHandler: () => void = null\n    public onProgressHandler: (p: number) => void = null\n    public onErrorHandler: (err: Error) => void = null\n\n    private _voList: Array<LoaderVO> = []\n    private _status: eLoaderStatus = eLoaderStatus.READY\n\n    protected dispose(): void {\n        let vo: LoaderVO\n        for (vo of this._voList) {\n            this._removeEvent(vo)\n            if (vo.status != eLoaderStatus.DISPOSE) {\n                vo.counter -= 1\n            } else {\n                console.warn('LoaderVO is disposed!')\n            }\n        }\n        this.thisObj = this.onCompleteHandler = this.onProgressHandler = this.onErrorHandler = null\n        this._voList.length = 0\n        this._status = eLoaderStatus.DISPOSE\n        this.removeAll()\n        console.log(`task:${this.id} dispose`)\n        this.id = -1\n    }\n\n    /** 取消加载任务，会派发：TaskEvent.FINISH */\n    public cancel(): void {\n        console.log(`task:${this.id} cancel`)\n        this._status = eLoaderStatus.CANCLE\n        let vo: LoaderVO\n        for (vo of this._voList) {\n            this._removeEvent(vo)\n        }\n        this.checkThenComplete()\n    }\n\n    /** 追加一个加载项 */\n    public attachToLoaderVO(vo: LoaderVO): void {\n        if (this._voList.indexOf(vo) == -1) {\n            vo.counter += 1\n            this._voList.push(vo)\n            this._addEvent(vo)\n        } else {\n            console.warn('LoaderVO has already in LoadTask')\n        }\n    }\n\n    public checkThenComplete(): boolean {\n        let isComplete: boolean = this._canComplete()\n\n        if (isComplete) {\n            console.log(`task:${this.id} complete`)\n\n            this.onProgressHandler && this.onProgressHandler.apply(this.thisObj, [1])\n            this.onCompleteHandler && this.onCompleteHandler.apply(this.thisObj)\n\n            this._finish()\n        }\n        // 没有成功，当前任务被取消\n        else if (this._status == eLoaderStatus.CANCLE) {\n            console.log(`task:${this.id} cancel`)\n            this._finish()\n        }\n        // 没有成功，检查是否加载失败\n        else if (this._hasFail()) {\n            console.log(`task:${this.id} fail`)\n\n            const failVO = this._getFailVO()\n            this.onErrorHandler && this.onErrorHandler.apply(this.thisObj, [failVO.error])\n\n            this._finish()\n        }\n\n        return isComplete\n    }\n\n    /** 注册 LoaderVO 监听 */\n    private _addEvent(vo: LoaderVO): void {\n        vo.addEventListener(LoadEvent.PROGRESS, this.onLoadProgress, this)\n\n        /** LoaderVO 申请检查任务完成情况 */\n        vo.addEventListener(\n            LoadEvent.CHECK_TASK,\n            () => {\n                this.checkThenComplete()\n            },\n            this\n        )\n    }\n\n    /** 移除 LoaderVO 监听 */\n    private _removeEvent(vo: LoaderVO): void {\n        vo.removeTargetListener(this)\n    }\n\n    /** LoaderVO 加载进度变化 */\n    protected onLoadProgress(evt: LoadEvent): void {\n        this._status = eLoaderStatus.LOADING\n        if (this.onProgressHandler) {\n            let progress: number = this.calculateProgress()\n            this.onProgressHandler.apply(this.thisObj, [progress])\n        }\n    }\n\n    private calculateProgress(): number {\n        let ret: number = 0\n\n        if (this._voList.length) {\n            let sum: number = 0\n            let vo: LoaderVO\n            for (vo of this._voList) {\n                sum += vo.progress\n            }\n\n            ret = sum / this._voList.length\n        }\n\n        return ret\n    }\n\n    // public get voList(): Array<LoaderVO> {\n    //     return this._voList\n    // }\n\n    /** 返回当前 Task 是否可以完成 */\n    private _canComplete(): boolean {\n        // 任务已结束或取消，直接返回false\n        if (this._status == eLoaderStatus.DISPOSE || this._status == eLoaderStatus.CANCLE) {\n            return false\n        }\n\n        let isComplete: boolean = true\n\n        let vo: LoaderVO\n        for (vo of this._voList) {\n            if (vo.status != eLoaderStatus.COMPLETED) {\n                isComplete = false\n                break\n            }\n        }\n\n        return isComplete\n    }\n\n    /** 存在加载失败项 */\n    private _hasFail(): boolean {\n        let vo: LoaderVO\n        for (vo of this._voList) {\n            if (vo.status == eLoaderStatus.FAIL) {\n                return true\n            }\n        }\n        return false\n    }\n\n    private _getFailVO(): LoaderVO {\n        let vo: LoaderVO\n        for (vo of this._voList) {\n            if (vo.status == eLoaderStatus.FAIL) {\n                return vo\n            }\n        }\n        return null\n    }\n\n    private _finish() {\n        // 派发\n        this.dispatchEvent(MaouEvent.Create(TaskEvent, TaskEvent.FINISH))\n    }\n\n    // --------------- LoadTask 对象池方法 start --------------- //\n    public static Create(thisObj?: object, onCompleteFun?: () => void, onProgressFun?: (p: number) => void, onErrorFun?: (err: Error) => void): LoadTask {\n        let task: LoadTask\n        if (this._loadTaskPool.length) {\n            task = this._loadTaskPool.shift()\n        } else {\n            task = new LoadTask()\n        }\n        task.thisObj = thisObj\n        task.onCompleteHandler = onCompleteFun\n        task.onProgressHandler = onProgressFun\n        task.onErrorHandler = onErrorFun\n        task._voList.length = 0\n        task._status = eLoaderStatus.READY\n        task.id = ++this._idCounter\n        console.log(`task:${task.id} create`)\n        return task\n    }\n\n    public static Recycle(task: LoadTask): void {\n        if (this._loadTaskPool.indexOf(task) == -1) {\n            this._loadTaskPool.push(task)\n            task.dispose()\n        }\n    }\n    // --------------- LoadTask 对象池方法 end --------------- //\n}\n","import { AssetManager } from '../asset/AssetManager'\nimport { EventDispatcher } from '../event/EventDispatcher'\nimport { MaouEvent } from '../event/MaouEvent'\nimport { classname } from '../util/Decorators'\nimport { MaouCore } from './MaouCore'\n\nexport enum CommandState {\n    None = 0,\n    Load = 1,\n    Ready = 2,\n    Progreess = 3,\n    Finish = 4\n}\n\n@classname('CommandEvent')\nexport class CommandEvent extends MaouEvent {\n    public static FINISH = 'FINISH'\n    public static ERROR = 'ERROR'\n}\n\nexport default class MaouCommand extends EventDispatcher {\n    state: CommandState = CommandState.None\n\n    call() {\n        MaouCore.Call(this)\n    }\n\n    finish() {\n        this.dispatchEvent(MaouEvent.Create(CommandEvent, CommandEvent.FINISH))\n    }\n\n    error() {\n        this.dispatchEvent(MaouEvent.Create(CommandEvent, CommandEvent.ERROR))\n    }\n\n    getController(): typeof MaouController {\n        throw Error('getController need override!!!')\n    }\n\n    getResources(): Array<string> {\n        return new Array<string>(0)\n    }\n\n    /**\n     * 子类必须要实现此方法，否则代码压缩后找不到类名\n     */\n    getName() {\n        const name = this.constructor['__NAME__']\n        if (!name) {\n            throw Error('需要使用装饰器classname()装饰这个command')\n        }\n        return name\n    }\n\n    /**\n     * 资源检查 & 加载\n     */\n    async check() {\n        return new Promise<boolean>((resolve, reject) => {\n            // if (this.state !== CommandState.None) {\n            //     console.warn(`[MaouCommand.check][Command(${this.getName()})] state != CommandState.None`)\n            //     return resolve(false)\n            // }\n            // console.log(`[MaouCommand.check][Command(${this.getName()})]`)\n\n            let paths = this.getResources()\n            if (paths.length === 0) {\n                this.state = CommandState.Ready\n                return resolve(true)\n            }\n\n            this.state = CommandState.Load\n            // TODO 显示 Loading\n            let count = 0\n            AssetManager.me.loadGroup(\n                paths,\n                this,\n                () => {\n                    this.state = CommandState.Ready\n                    // TODO 移除 Loading\n                    return resolve(true)\n                },\n                (err) => {\n                    return resolve(false)\n                },\n                (progress) => {\n                    this.state = CommandState.Progreess\n                }\n            )\n        })\n    }\n}\n","import { Component, _decorator } from 'cc'\nimport { AssetManager } from '../asset/AssetManager'\nimport BaseCache from '../asset/cache/BaseCache'\nconst { ccclass } = _decorator\n\n@ccclass('MaouController')\nexport default class MaouController extends Component {\n    protected load(name: string, cb: (err: Error, cache: BaseCache) => void): void {\n        const url = `Controllers/${this['__classname__']}/${name}`\n        AssetManager.me.load(\n            url,\n            this,\n            () => {\n                const cache = AssetManager.me.cache.getRes(url)\n                cb.call(this, [null, cache])\n            },\n            (err) => {\n                cb.call(this, [err])\n            }\n        )\n    }\n\n    protected loadP(name: string): Promise<BaseCache> {\n        return new Promise((resolve, reject) => {\n            this.load(name, (err, cache) => {\n                if (err != null) {\n                    return reject(err)\n                }\n                return resolve(cache)\n            })\n        })\n    }\n\n    onLoad() {}\n}\n","import { _decorator, Component, Node, game } from 'cc'\r\nimport MaouCommand, { CommandState } from './MaouCommand'\r\nimport MaouController from './MaouController'\r\nimport { RenderManager } from './RenderManager'\r\nconst { ccclass, property } = _decorator\r\n\r\n@ccclass('MaouCore')\r\nexport class MaouCore extends Component {\r\n    static Instance: MaouCore\r\n    private static Controllers: Map<any, MaouController> = new Map<any, MaouController>()\r\n\r\n    public commands: Array<MaouCommand>\r\n    public command: MaouCommand\r\n\r\n    onLoad() {\r\n        MaouCore.Instance = this\r\n        this.commands = new Array<MaouCommand>()\r\n    }\r\n\r\n    update(dt) {\r\n        if (this.command != null) {\r\n            this.checkCommand()\r\n        }\r\n\r\n        RenderManager.me.update()\r\n    }\r\n\r\n    onDestroy() {\r\n        MaouCore.Instance = null\r\n        // MaouCore.Controllers.clear()\r\n        // MaouCore.Caches.clear()\r\n\r\n        // this.command = null\r\n        // this.commands.length = 0\r\n    }\r\n\r\n    static Reset() {\r\n        if (MaouCore.Instance != null) {\r\n            MaouCore.Instance.node.destroy()\r\n        }\r\n        let node = new Node('[MaouCore]')\r\n        node.addComponent(MaouCore)\r\n        // 常驻节点\r\n        game.addPersistRootNode(node)\r\n        RenderManager.me.reset()\r\n    }\r\n\r\n    private checkCommand() {\r\n        if (this.command != null && this.command.state === CommandState.Ready) {\r\n            this.command.state = CommandState.Finish\r\n            this.directCall(this.command)\r\n        }\r\n\r\n        if (this.command != null && this.command.state === CommandState.Finish) {\r\n            this.command = null\r\n            this.nextCommand()\r\n        }\r\n    }\r\n}\r\n","/*\n * @Author: Blues\n * @Date: 2022-01-05 00:45:00\n * @LastEditTime: 2022-01-07 15:51:48\n * @LastEditors: Blues\n * @Description:\n */\nimport { classname } from '../util/Decorators'\n\n@classname('MaouEvent')\nexport class MaouEvent {\n    private static _pool: MaouEvent[] = []\n\n    public type: string = null\n    public target: object = null\n    public data: object = null\n\n    constructor(type: string, data?: object) {\n        this.type = type\n        this.data = data\n    }\n\n    /**\n     * 克隆\n     */\n    clone() {\n        return MaouEvent.Create(this.constructor as { new (...args: any[]): any }, this.type, this.data)\n    }\n\n    /**\n     *\n     * @returns {string}\n     */\n    public toString(): string {\n        return `${this.constructor['__NAME__']}(type=${this.type}, data=${JSON.stringify(this.data)})`\n    }\n\n    public dispose(): void {\n        this.data = null\n        this.target = null\n        this.type = null\n    }\n\n    /**\n     * 从对象池中取出或创建一个新的事件实例\n     */\n    public static Create<T extends MaouEvent>(EventClass: { new (...args: any[]): T }, type: string, data?: object): T {\n        const eventPool = this._pool\n        for (let i = 0; i < eventPool.length; i++) {\n            if (eventPool[i] instanceof EventClass) {\n                const evt = eventPool[i]\n                evt.type = type\n                evt.data = data\n                evt.target = null\n                eventPool.splice(i, 1)\n                return evt as T\n            }\n        }\n\n        return new EventClass(type, data)\n    }\n\n    /**\n     * 释放一个事件对象，并缓存到对象池\n     */\n    public static Recycle(event: MaouEvent) {\n        const eventPool = this._pool\n        // 限制对象池大小\n        if (eventPool.length >= 50) {\n            return\n        }\n        event.dispose()\n        eventPool.push(event)\n    }\n}\n","import { _decorator, Component, Node, SpriteAtlas, Sprite, Vec3, SpriteFrame, v3 } from 'cc'\nconst { ccclass, property } = _decorator\n\n@ccclass('MovieClip')\nexport class MovieClip extends Component {\n    @property()\n    frameRate = 30\n\n    private _sprite: Sprite = null\n    private _pos: Vec3 = null\n    private _pos0: Vec3 = null\n    private _frames: SpriteFrame[] = []\n    private _curFrame = 0\n    private _frameLen = 0\n    private _timeTotal = 0\n    private _frameGap = 0\n\n    start() {\n        this._sprite = this.getComponent(Sprite)\n        this._frames = this._sprite.spriteAtlas.getSpriteFrames()\n        this._frameLen = this._frames.length\n        this._pos = this._sprite.node.getPosition()\n        if (this._pos0 == null) {\n            this._pos0 = v3(this._frames[0].offset.x, this._frames[0].offset.y, 0)\n        }\n        this._frameGap = 1 / this.frameRate\n    }\n\n    update(deltaTime: number) {\n        const frame = Math.floor(this._timeTotal / this._frameGap)\n        this._curFrame = frame % this._frameLen\n        let sp = this._frames[this._curFrame]\n        this._sprite.spriteFrame = sp\n        this._sprite.node.position = v3(this._pos.x + sp.offset.x - this._pos0.x, this._pos.y + sp.offset.y - this._pos0.y)\n        this._timeTotal += deltaTime\n    }\n\n    public get curFrame(): number {\n        return this._curFrame\n    }\n\n    public gotoAndPlay(frame: number) {\n        this._timeTotal = this._frameGap * frame\n    }\n}\n","import { instantiate, Node, Prefab, resources } from 'cc'\nimport BaseCache from './BaseCache'\n\nexport default class PrefabDataCache extends BaseCache {\n    public get data(): Prefab {\n        return this._data as Prefab\n    }\n\n    public createNode(): Node {\n        if (!this.data) {\n            console.error('[PrefabCache][createNode] data为空，无法创建Node。')\n            return null\n        }\n        return instantiate(this.data)\n    }\n\n    protected addRef() {\n        this.data && this.data.addRef()\n    }\n\n    protected decRef() {\n        this.data && this.data.decRef()\n    }\n\n    public get refCount(): number {\n        return this.data == null ? 0 : this.data.refCount\n    }\n\n    /**\n     * 实际销毁，从内存中清除\n     */\n    public destroy(): void {\n        if (this._data != null && this._data instanceof Prefab) {\n            resources.release(this._finalURL, Prefab)\n            // assetManager.releaseAsset(this._data)\n            this._data.destroy()\n            this._data = null\n        }\n        this._isDisposed = true\n    }\n}\n","import { Prefab, resources } from 'cc'\nimport { ILoader } from './ILoader'\nimport LoaderVO from './LoaderVO'\n\nexport default class PrefabLoader implements ILoader {\n    load(vo: LoaderVO) {\n        vo.finalLoadURL = vo.path\n\n        resources.load(\n            vo.finalLoadURL,\n            Prefab,\n            (finished, total) => {\n                vo.setProgress(finished / total)\n            },\n            (err, content) => {\n                if (err != null) {\n                    console.error('[PrefabLoader]', err)\n                    vo.fail(err)\n                } else {\n                    vo.complete(content)\n                }\n            }\n        )\n    }\n}\n","import { Node, VideoPlayer, _decorator, Animation } from 'cc'\nimport { GameManager } from '../manager/GameManager'\nimport { AssetManager } from '../maou/asset/AssetManager'\nimport VideoCache from '../maou/asset/cache/VideoCache'\n// import { VideoSectionVO } from '../data/SectionVO'\nimport { BaseSectionComponent } from './BaseSectionComponent'\nconst { ccclass, property } = _decorator\n\n@ccclass('PressSectionComponent')\nexport class PressSectionComponent extends BaseSectionComponent {\n    @property(Node)\n    area: Node = null\n\n    @property(Animation)\n    anim: Animation = null\n\n    onLoaded() {\n        this.area.on(Node.EventType.TOUCH_START, this.onTouchStart, this)\n        this.area.on(Node.EventType.TOUCH_END, this.onTouchEnd, this)\n        this.anim.on(Animation.EventType.FINISHED, this.onFinish, this)\n    }\n\n    dispose() {\n        this.area.targetOff(this)\n        this.anim.targetOff(this)\n    }\n\n    onTouchStart() {\n        if (this.anim.getState('press').isPlaying) {\n            this.anim.resume()\n        } else {\n            this.anim.play()\n        }\n    }\n\n    onTouchEnd() {\n        this.anim.pause()\n    }\n\n    onFinish() {\n        // this.clickNext()\n        const self = this\n        GameManager.me.showHtmlNextBtn(() => {\n            GameManager.me.hideHtmlNextBtn()\n            self.clickNext()\n        })\n    }\n}\n","/*\n * @Author: Blues\n * @Date: 2021-11-11 14:18:25\n * @LastEditTime: 2021-11-19 15:26:29\n * @LastEditors: Blues\n * @Description:\n */\n\nexport interface IRender {\n    /**\n     * 执行渲染\n     * @param {number} dt 间隔时间（s）\n     * @param {number} frame 总帧数\n     * @param {number} time 总时间（ms）\n     */\n    onRender: (dt: number, frame: number, time: number) => void\n}\n\nexport class RenderManager {\n    private static _me: RenderManager = null\n\n    private _curTime: number = 0\n    private _preFrameTime: number\n    private _lastTime: number = 0\n    private _frameCount: number = 0\n    private _renderList: IRender[] = null\n    private _callbackList: IFrameCallback[] = null\n\n    public static get me(): RenderManager {\n        if (this._me == null) {\n            this._me = new RenderManager()\n        }\n        return this._me\n    }\n\n    // constructor() {\n    //     this.reset()\n    // }\n\n    public reset() {\n        this._curTime = Date.now()\n        this._lastTime = this._curTime\n        this._frameCount = 0\n        this._renderList = []\n        this._callbackList = []\n    }\n\n    public get preFrameTime(): number {\n        return this._preFrameTime\n    }\n\n    public get curTime(): number {\n        return this._curTime\n    }\n\n    public destroy() {}\n\n    public update() {\n        this._preFrameTime = this._curTime\n        this._frameCount++\n        this._curTime = Date.now()\n        const dt = (this._curTime - this._lastTime) / 1000 // 与前一帧相隔的时间（秒）\n\n        this.rendeRender(dt, this._frameCount, this._curTime)\n        this.rendeCallback(this._curTime)\n\n        this._lastTime = this._curTime\n    }\n\n    /**\n     * 添加时间回调\n     * @param value 回调\n     * @param num 次数(默认0次，标示无限循环)\n     * @param delay 延迟时间(默认0毫秒，每次帧频都触发)\n     *\n     */\n    public addCallback(caller: any, value: () => void, num: number = 0, delay: number = 0): void {\n        if (value != null && !this.hasCallback(value)) {\n            let vo: IFrameCallback = {\n                caller: caller,\n                callback: value,\n                num: num,\n                delay: delay,\n                lastTime: this._curTime,\n                curNum: 0\n            }\n            this._callbackList.push(vo)\n        }\n    }\n\n    public hasCallback(value: Function): boolean {\n        return this._callbackList.some((item) => {\n            return item.callback == value\n        })\n    }\n\n    public removeCallback(value: Function): void {\n        for (let i = 0; i < this._callbackList.length; i++) {\n            if (this._callbackList[i].callback == value) {\n                this._callbackList.splice(i, 1)\n                return\n            }\n        }\n    }\n\n    public removeCallbackTarget(target: any): void {\n        for (let i = this._callbackList.length - 1; i >= 0; i--) {\n            if (this._callbackList[i].caller == target) {\n                this._callbackList.splice(i, 1)\n            }\n        }\n    }\n\n    public addRender(value: IRender): void {\n        if (value != null && !this.hasRender(value)) {\n            this._renderList.push(value)\n        }\n    }\n\n    public hasRender(value: IRender): boolean {\n        return this._renderList.indexOf(value) >= 0\n    }\n\n    public removeRender(value: IRender): void {\n        if (value != null) {\n            const idx = this._renderList.indexOf(value)\n            if (idx >= 0) {\n                this._renderList.splice(idx, 1)\n            }\n        }\n    }\n\n    private rendeRender(dt: number, frame: number, time: number) {\n        this._renderList.forEach((render) => {\n            render.onRender(dt, frame, time)\n        }, this)\n    }\n\n    private rendeCallback(curTime: number): void {\n        let vo: IFrameCallback\n        let addTime: number\n        for (vo of this._callbackList) {\n            addTime = curTime - vo.lastTime\n\n            if (addTime >= vo.delay) {\n                if (vo.delay == 0) {\n                    vo.lastTime = curTime\n                } else {\n                    vo.lastTime = curTime + (addTime % vo.delay)\n                }\n\n                vo.callback.call(vo.caller)\n                if (vo.num != 0) {\n                    vo.curNum += parseInt((addTime / vo.delay).toString())\n                    if (vo.curNum >= vo.num) {\n                        let index: number = this._callbackList.indexOf(vo)\n                        if (index > -1) {\n                            this._callbackList.splice(index, 1)\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n\ninterface IFrameCallback {\n    delay: number\n    num: number\n    curNum: number\n    callback: () => void\n    lastTime: number\n    caller: any\n}\n","import { instantiate, Node } from 'cc'\nimport { BaseSectionVO, BoardSectionVO, EndingSectionVO, VideoSectionVO } from '../data/SectionVO'\nimport { AssetManager } from '../maou/asset/AssetManager'\nimport PrefabDataCache from '../maou/asset/cache/PrefabDataCache'\nimport { BaseSectionComponent } from '../section/BaseSectionComponent'\nimport { GameManager } from './GameManager'\n\nexport class SectionManager {\n    private _curSection: BaseSectionComponent = null\n    private _curSectionPrefabCache: PrefabDataCache = null\n    private _sectionMap: Map<string, BaseSectionVO> = new Map()\n    private _entering = false\n    private _history: string[] = []\n    private _isBack = false\n\n    constructor() {\n        let vo = new BaseSectionVO()\n        vo.id = 'section_index'\n        vo.path = 'product/PrimeFreeze/prefab/section/section_index.prefab'\n        this._sectionMap.set(vo.id, vo)\n\n        // vo = new BaseSectionVO()\n        // vo.id = 'section_fullvideo'\n        // vo.path = 'product/PrimeFreeze/prefab/section/section_fullvideo.prefab'\n        // this._sectionMap.set(vo.id, vo)\n\n        vo = new BaseSectionVO()\n        vo.id = 'section_home'\n        vo.path = 'product/PrimeFreeze/prefab/section/section_home.prefab'\n        this._sectionMap.set(vo.id, vo)\n\n        // 拖拽section(鸡肉、包材、浆果)\n        let boardSectionVO = new BoardSectionVO()\n        boardSectionVO.id = 'section_board_1'\n        boardSectionVO.path = 'product/PrimeFreeze/prefab/section/section_board_1.prefab'\n        boardSectionVO.items.push({\n            id: 'item_chicken',\n            icon: 'product/PrimeFreeze/image/chicken_icon_1.png',\n            iconDisable: 'product/PrimeFreeze/image/chicken_icon_2.png',\n            bigImage: 'product/PrimeFreeze/image/chicken_big.png'\n        })\n        boardSectionVO.items.push({\n            id: 'item_cabbage',\n            icon: 'product/PrimeFreeze/image/cabbage_icon_1.png',\n            iconDisable: 'product/PrimeFreeze/image/cabbage_icon_2.png',\n            bigImage: 'product/PrimeFreeze/image/cabbage_big.png'\n        })\n        boardSectionVO.items.push({\n            id: 'item_berries',\n            icon: 'product/PrimeFreeze/image/berries_icon_1.png',\n            iconDisable: 'product/PrimeFreeze/image/berries_icon_2.png',\n            bigImage: 'product/PrimeFreeze/image/berries_big.png'\n        })\n        this._sectionMap.set(boardSectionVO.id, boardSectionVO)\n\n        // 鸡视频\n        let videoVO = new VideoSectionVO()\n        videoVO.id = 'section_chicken_video'\n        videoVO.itemId = 'item_chicken'\n        videoVO.path = 'product/PrimeFreeze/prefab/section/section_video.prefab'\n        videoVO.videoPath = 'https://p-games.silversea-media.net/Videos/Chicken-1.mp4'\n        this._sectionMap.set(videoVO.id, videoVO)\n\n        // 鸡slider\n        vo = new BaseSectionVO()\n        vo.id = 'section_chicken_slider'\n        vo.path = 'product/PrimeFreeze/prefab/section/section_chicken_slider.prefab'\n        this._sectionMap.set(vo.id, vo)\n\n        // 包菜视频\n        videoVO = new VideoSectionVO()\n        videoVO.id = 'section_cabbage_video'\n        videoVO.itemId = 'item_cabbage'\n        videoVO.path = 'product/PrimeFreeze/prefab/section/section_video.prefab'\n        videoVO.videoPath = 'https://p-games.silversea-media.net/Videos/Vege-1.mp4'\n        this._sectionMap.set(videoVO.id, videoVO)\n\n        // 包菜slider\n        vo = new BaseSectionVO()\n        vo.id = 'section_cabbage_slider'\n        vo.path = 'product/PrimeFreeze/prefab/section/section_cabbage_slider.prefab'\n        this._sectionMap.set(vo.id, vo)\n\n        // 浆果视频\n        videoVO = new VideoSectionVO()\n        videoVO.id = 'section_berries_video'\n        videoVO.itemId = 'item_berries'\n        videoVO.path = 'product/PrimeFreeze/prefab/section/section_video.prefab'\n        videoVO.videoPath = 'https://p-games.silversea-media.net/Videos/Fruit-1.mp4'\n        this._sectionMap.set(videoVO.id, videoVO)\n\n        // 浆果slider\n        vo = new BaseSectionVO()\n        vo.id = 'section_berries_slider'\n        vo.path = 'product/PrimeFreeze/prefab/section/section_berries_slider.prefab'\n        this._sectionMap.set(vo.id, vo)\n\n        // 结束section(鸡肉、包材、浆果)\n        let endSectionVO = new EndingSectionVO()\n        endSectionVO.id = 'section_board_1_ending'\n        endSectionVO.path = 'product/PrimeFreeze/prefab/section/section_board_1_ending.prefab'\n        endSectionVO.boardSectionId = 'section_board_1'\n        endSectionVO.items = ['item_chicken', 'item_cabbage', 'item_berries']\n        endSectionVO.videoUrls = ['https://www.youtube.com/watch?v=Vj0unnMQK28', 'https://www.youtube.com/watch?v=Cl8Nsb_qUaU', 'https://www.youtube.com/watch?v=oF1aK6y9k8I']\n        this._sectionMap.set(endSectionVO.id, endSectionVO)\n\n        // =========================================\n\n        // 拖拽section(鸡腿、果汁)\n        boardSectionVO = new BoardSectionVO()\n        boardSectionVO.id = 'section_board_2'\n        boardSectionVO.path = 'product/PrimeFreeze/prefab/section/section_board_2.prefab'\n        boardSectionVO.items.push({\n            id: 'item_drumstick',\n            icon: 'product/PrimeFreeze/image/drumstick_icon_1.png',\n            iconDisable: 'product/PrimeFreeze/image/drumstick_icon_2.png',\n            bigImage: 'product/PrimeFreeze/image/drumstick_big.png',\n            dragConf: {\n                size: { width: 100, height: 100 },\n                showBg: false\n            }\n        })\n        boardSectionVO.items.push({\n            id: 'item_juice',\n            icon: 'product/PrimeFreeze/image/juice_icon_1.png',\n            iconDisable: 'product/PrimeFreeze/image/juice_icon_2.png',\n            bigImage: 'product/PrimeFreeze/image/juice_big.png',\n            dragConf: {\n                size: { width: 53, height: 69 },\n                showBg: true\n            }\n        })\n        this._sectionMap.set(boardSectionVO.id, boardSectionVO)\n\n        // 果汁视频\n        videoVO = new VideoSectionVO()\n        videoVO.id = 'section_juice_video'\n        videoVO.itemId = 'item_juice'\n        videoVO.path = 'product/PrimeFreeze/prefab/section/section_video.prefab'\n        videoVO.videoPath = 'https://p-games.silversea-media.net/Videos/Pudding-1.mp4'\n        this._sectionMap.set(videoVO.id, videoVO)\n\n        // 果汁图片\n        vo = new BaseSectionVO()\n        vo.id = 'section_juice_image'\n        vo.path = 'product/PrimeFreeze/prefab/section/section_juice_image.prefab'\n        this._sectionMap.set(vo.id, vo)\n\n        // 鸡腿按住\n        vo = new BaseSectionVO()\n        vo.id = 'section_drumstick_press'\n        vo.itemId = 'item_drumstick'\n        vo.path = 'product/PrimeFreeze/prefab/section/section_drumstick_press.prefab'\n        this._sectionMap.set(vo.id, vo)\n\n        // 结束section(鸡腿、果汁)\n        endSectionVO = new EndingSectionVO()\n        endSectionVO.id = 'section_board_2_ending'\n        endSectionVO.path = 'product/PrimeFreeze/prefab/section/section_board_2_ending.prefab'\n        endSectionVO.boardSectionId = 'section_board_2'\n        endSectionVO.items = ['item_drumstick', 'item_juice']\n        endSectionVO.videoUrls = []\n        this._sectionMap.set(endSectionVO.id, endSectionVO)\n\n        // =========================================\n\n        // 拖拽section(啤酒，橙子)\n        boardSectionVO = new BoardSectionVO()\n        boardSectionVO.id = 'section_board_3'\n        boardSectionVO.path = 'product/PrimeFreeze/prefab/section/section_board_3.prefab'\n        boardSectionVO.items.push({\n            id: 'item_brocolli',\n            icon: 'product/PrimeFreeze/image/brocolli_icon_1.png',\n            iconDisable: 'product/PrimeFreeze/image/brocolli_icon_2.png',\n            bigImage: 'product/PrimeFreeze/image/brocolli_big.png',\n            dragConf: {\n                size: { width: 100, height: 100 },\n                showBg: false\n            }\n        })\n        boardSectionVO.items.push({\n            id: 'item_orange',\n            icon: 'product/PrimeFreeze/image/orange_icon_1.png',\n            iconDisable: 'product/PrimeFreeze/image/orange_icon_2.png',\n            bigImage: 'product/PrimeFreeze/image/orange_big.png',\n            dragConf: {\n                size: { width: 40, height: 69 },\n                showBg: true\n            }\n        })\n        boardSectionVO.items.push({\n            id: 'item_beer',\n            icon: 'product/PrimeFreeze/image/beer_icon_1.png',\n            iconDisable: 'product/PrimeFreeze/image/beer_icon_2.png',\n            bigImage: 'product/PrimeFreeze/image/beer_big.png',\n            dragConf: {\n                size: { width: 70, height: 88 },\n                showBg: true\n            }\n        })\n        this._sectionMap.set(boardSectionVO.id, boardSectionVO)\n\n        // 橙汁视频\n        videoVO = new VideoSectionVO()\n        videoVO.id = 'section_orange_video'\n        videoVO.itemId = 'item_orange'\n        videoVO.path = 'product/PrimeFreeze/prefab/section/section_video.prefab'\n        videoVO.videoPath = 'https://p-games.silversea-media.net/Videos/Orange Can-1.mp4'\n        this._sectionMap.set(videoVO.id, videoVO)\n\n        // 啤酒视频\n        videoVO = new VideoSectionVO()\n        videoVO.id = 'section_beer_video'\n        videoVO.itemId = 'item_beer'\n        videoVO.path = 'product/PrimeFreeze/prefab/section/section_video.prefab'\n        videoVO.videoPath = 'https://p-games.silversea-media.net/Videos/Beer-1.mp4'\n        this._sectionMap.set(videoVO.id, videoVO)\n\n        // brocolliz视频\n        videoVO = new VideoSectionVO()\n        videoVO.id = 'section_brocolli_video'\n        videoVO.itemId = 'item_brocolli'\n        videoVO.path = 'product/PrimeFreeze/prefab/section/section_video.prefab'\n        videoVO.videoPath = 'https://p-games.silversea-media.net/Videos/Soup-1.mp4'\n        this._sectionMap.set(videoVO.id, videoVO)\n\n        // slider\n        vo = new BaseSectionVO()\n        vo.id = 'section_brocolli_slider'\n        vo.path = 'product/PrimeFreeze/prefab/section/section_brocolli_slider.prefab'\n        this._sectionMap.set(vo.id, vo)\n\n        // 结束section\n        endSectionVO = new EndingSectionVO()\n        endSectionVO.id = 'section_board_3_ending'\n        endSectionVO.path = 'product/PrimeFreeze/prefab/section/section_board_3_ending.prefab'\n        endSectionVO.boardSectionId = 'section_board_3'\n        endSectionVO.items = ['item_brocolli', 'item_orange', 'item_beer']\n        endSectionVO.videoUrls = []\n        this._sectionMap.set(endSectionVO.id, endSectionVO)\n    }\n\n    enter(sectionId: string, ...args) {\n        return new Promise<boolean>((resolve) => {\n            if (this._entering) {\n                return resolve(false)\n            }\n            this._entering = true\n\n            const mainContainer = GameManager.me.layerManager.mainContainer\n\n            const vo = this._sectionMap.get(sectionId)\n            const oldSection = this._curSection\n            const oldCache = this._curSectionPrefabCache\n\n            this._history.push(sectionId)\n\n            AssetManager.me.load(vo.path, this, () => {\n                const cache = AssetManager.me.cache.getRes(vo.path) as PrefabDataCache\n                if (!cache || !cache.data) {\n                    return resolve(false)\n                }\n                console.log(cache.data)\n                let sectionNode: Node\n                try {\n                    sectionNode = instantiate(cache.data)\n                } catch (err) {\n                    console.log(err)\n                }\n                const newSection = sectionNode.getComponent(BaseSectionComponent)\n                newSection.setData(vo)\n\n                // newSection loaded\n                newSection.once(\n                    BaseSectionComponent.EventType.Loaded,\n                    () => {\n                        newSection.isBackRun = this._isBack\n                        newSection.onLoaded()\n                        newSection.show(mainContainer)\n                        newSection.run(...args)\n\n                        if (oldSection) {\n                            oldSection.dispose()\n                            oldSection.node.destroy()\n                        }\n\n                        // if (oldCache) {\n                        //     oldCache.dispose()\n                        // }\n\n                        this._curSection = newSection\n                        this._curSectionPrefabCache = cache\n                        this._entering = false\n                        this._isBack = false\n                        return resolve(true)\n                    },\n                    this\n                )\n\n                // next section\n                newSection.once(\n                    BaseSectionComponent.EventType.Next,\n                    (evt) => {\n                        this._next(evt.data)\n                    },\n                    this\n                )\n\n                newSection.load()\n            })\n        })\n    }\n\n    private _next(data: any) {\n        // if (this._curSection.id == 'section_index') {\n        //     this.enter('section_fullvideo')\n        // }\n        // else if (this._curSection.id == 'section_fullvideo') {\n        //     this.enterHome()\n        //     GameManager.me.hideHtmlNextBtn()\n        // }\n        if (this._curSection.id == 'section_index') {\n            GameManager.me.showHtmlBg()\n            GameManager.me.hideGame()\n            GameManager.me.hideHtmlBackBtn()\n            let self = this\n            GameManager.me.showHtmlNextBtn(() => {\n                self.enterHome()\n            })\n        } else if (this._curSection.id == 'section_home') {\n            GameManager.me.hideHtmlBackBtn()\n            if (data == 'btn1') {\n                this.enterBoard('section_board_1')\n            } else if (data == 'btn2') {\n                this.enterBoard('section_board_2')\n            } else if (data == 'btn3') {\n                this.enterBoard('section_board_3')\n            }\n            GameManager.me.hideHtmlBg()\n        } else if (this._curSection.id == 'section_board_1') {\n            if (data == 'item_chicken') {\n                this.enter('section_chicken_video')\n            } else if (data == 'item_cabbage') {\n                this.enter('section_cabbage_video')\n            } else if (data == 'item_berries') {\n                this.enter('section_berries_video')\n            }\n        } else if (this._curSection.id == 'section_chicken_video') {\n            this.enter('section_chicken_slider')\n        } else if (this._curSection.id == 'section_cabbage_video') {\n            this.enter('section_cabbage_slider')\n        } else if (this._curSection.id == 'section_berries_video') {\n            this.enter('section_berries_slider')\n        } else if (this._curSection.id == 'section_chicken_slider' || this._curSection.id == 'section_cabbage_slider' || this._curSection.id == 'section_berries_slider') {\n            this.enter('section_board_1_ending')\n        } else if (this._curSection.id == 'section_board_1_ending') {\n            if (data == 'home') {\n                this.enterHome()\n            } else if (data == 'btn1') {\n                this.enter('section_board_1', 'item_chicken')\n            } else if (data == 'btn2') {\n                this.enter('section_board_1', 'item_cabbage')\n            } else if (data == 'btn3') {\n                this.enter('section_board_1', 'item_berries')\n            }\n        }\n\n        if (this._curSection.id == 'section_board_2') {\n            if (data == 'item_juice') {\n                this.enter('section_juice_video')\n            } else if (data == 'item_drumstick') {\n                this.enter('section_drumstick_press')\n            }\n        } else if (this._curSection.id == 'section_juice_video') {\n            this.enter('section_juice_image')\n            const self = this\n            GameManager.me.showHtmlNextBtn(() => {\n                self._next(null)\n                GameManager.me.hideHtmlNextBtn()\n            })\n        } else if (this._curSection.id == 'section_juice_image' || this._curSection.id == 'section_drumstick_press') {\n            this.enter('section_board_2_ending')\n        } else if (this._curSection.id == 'section_board_2_ending') {\n            if (data == 'home') {\n                this.enterHome()\n            } else if (data == 'btn1') {\n                this.enter('section_board_2')\n            } else if (data == 'btn2') {\n                this.enter('section_board_2')\n            }\n        }\n\n        if (this._curSection.id == 'section_board_3') {\n            if (data == 'item_orange') {\n                this.enter('section_orange_video')\n            } else if (data == 'item_beer') {\n                this.enter('section_beer_video')\n            } else if (data == 'item_brocolli') {\n                this.enter('section_brocolli_video')\n            }\n        } else if (this._curSection.id == 'section_brocolli_video') {\n            this.enter('section_brocolli_slider')\n        } else if (this._curSection.id == 'section_orange_video' || this._curSection.id == 'section_beer_video' || this._curSection.id == 'section_brocolli_slider') {\n            this.enter('section_board_3_ending')\n        } else if (this._curSection.id == 'section_board_3_ending') {\n            if (data == 'home') {\n                this.enterHome()\n            } else {\n                this.enter('section_board_3')\n            }\n        }\n    }\n\n    private enterHome() {\n        GameManager.me.valueManager.clearBoardFlag('section_board_1')\n        GameManager.me.valueManager.clearBoardFlag('section_board_2')\n        GameManager.me.valueManager.clearBoardFlag('section_board_3')\n        this._history.length = 1\n        this.enter('section_home').then((v) => {\n            GameManager.me.showGame()\n            GameManager.me.showHtmlBg()\n            GameManager.me.hideHtmlNextBtn()\n            GameManager.me.hideHtmlBackBtn()\n        })\n    }\n\n    private enterBoard(sectionId: string) {\n        this.enter(sectionId)\n        const self = this\n        GameManager.me.showHtmlBackBtn(() => {\n            if (self._history.length >= 3) {\n                if (self._history.length == 3) {\n                    GameManager.me.hideHtmlBackBtn()\n                }\n\n                self._history.pop()\n                const id = self._history.pop()\n                const itemId = self._curSection.data.itemId\n                this._isBack = true\n                self.enter(id, itemId)\n            }\n        })\n    }\n\n    getSection(id: string) {\n        return this._sectionMap.get(id)\n    }\n}\n","export class BaseSectionVO {\n    id: string = ''\n    path: string = ''\n    resource: string[] = []\n    itemId: string = ''\n}\n\nexport class VideoSectionVO extends BaseSectionVO {\n    videoPath: string = ''\n}\n\nexport class BoardSectionVO extends BaseSectionVO {\n    items: {\n        id: string\n        icon: string\n        iconDisable: string\n        bigImage: string\n        dragConf?: {\n            size: { width: number; height: number }\n            showBg: boolean\n        }\n    }[] = []\n}\n\nexport class EndingSectionVO extends BaseSectionVO {\n    videoUrls: string[] = []\n    boardSectionId: string = ''\n    items: string[] = []\n}\n","import { Node, resources, sp } from 'cc'\nimport BaseCache from './BaseCache'\n\nexport default class SkeletonDataCache extends BaseCache {\n    public get data(): sp.SkeletonData {\n        return this._data as sp.SkeletonData\n    }\n\n    public createNode(): Node {\n        if (!this.data) {\n            console.error('[SkeletonDataCache][createNode] data为空，无法创建Node。')\n            return null\n        }\n        const node = new Node()\n        node.addComponent(sp.Skeleton).skeletonData = this.data\n        node.layer = 1 << 25 // UI_2D\n        return node\n    }\n\n    protected addRef() {\n        this.data && this.data.addRef()\n    }\n\n    protected decRef() {\n        this.data && this.data.decRef()\n    }\n\n    public get refCount(): number {\n        return this.data == null ? 0 : this.data.refCount\n    }\n\n    /**\n     * 实际销毁，从内存中清除\n     */\n    public destroy(): void {\n        if (this._data != null && this._data instanceof sp.SkeletonData) {\n            resources.release(this._finalURL, sp.SkeletonData)\n            // assetManager.releaseAsset(this._data)\n            this._data.destroy()\n            this._data = null\n        }\n        this._isDisposed = true\n    }\n}\n","import { resources, sp } from 'cc'\nimport { ILoader } from './ILoader'\nimport LoaderVO from './LoaderVO'\n\nexport default class SkeletonLoader implements ILoader {\n    load(vo: LoaderVO) {\n        vo.finalLoadURL = vo.path\n\n        resources.load(\n            vo.finalLoadURL,\n            sp.SkeletonData,\n            (finished, total) => {\n                vo.setProgress(finished / total)\n            },\n            (err, content) => {\n                if (err != null) {\n                    console.error('[SkeletonLoader]', err)\n                    vo.fail(err)\n                } else {\n                    vo.complete(content)\n                }\n            }\n        )\n    }\n}\n","import { EventTouch, gfx, Node, Sprite, UITransform, VideoPlayer, _decorator } from 'cc'\nimport { MovieClip } from '../common/MovieClip'\nimport { GameManager } from '../manager/GameManager'\nimport { BaseSectionComponent } from './BaseSectionComponent'\nconst { ccclass, property } = _decorator\n\n@ccclass('SliderSectionComponent')\nexport class SliderSectionComponent extends BaseSectionComponent {\n    @property(Node)\n    leftNode: Node = null\n\n    @property(Node)\n    rightNode: Node = null\n\n    @property(Node)\n    block: Node = null\n\n    @property\n    value: number = 0.5\n\n    @property(MovieClip)\n    dragBtn: MovieClip = null\n\n    private _leftW = 0\n    private _rightW = 0\n\n    onLoaded() {\n        this.block.on(Node.EventType.TOUCH_START, this.onBtnTouchStart, this)\n        this._leftW = this.leftNode.getComponent(UITransform).width\n        this._rightW = this.rightNode.getComponent(UITransform).width\n        this.setValue(this.value)\n    }\n\n    run() {\n        const self = this\n        GameManager.me.showHtmlNextBtn(() => {\n            GameManager.me.hideHtmlNextBtn()\n            self.clickNext()\n        })\n    }\n\n    update() {\n        if (this.dragBtn.curFrame == 34) {\n            this.dragBtn.gotoAndPlay(11)\n        }\n    }\n\n    private onBtnTouchStart(evt: EventTouch) {\n        const node = evt.currentTarget as Node\n        node.on(Node.EventType.TOUCH_MOVE, this.onTouchMove, this)\n        node.on(Node.EventType.TOUCH_END, this.onTouchEnd, this)\n        node.on(Node.EventType.TOUCH_CANCEL, this.onTouchEnd, this)\n    }\n\n    private onTouchEnd(evt: EventTouch) {\n        this.node.targetOff(this)\n    }\n\n    private onTouchMove(evt: EventTouch) {\n        let pos = this.block.position.add3f(evt.getUIDelta().x, 0, 0)\n        if (pos.x < this.leftNode.position.x) {\n            pos.x = this.leftNode.position.x\n        } else if (pos.x > this.rightNode.position.x) {\n            pos.x = this.rightNode.position.x\n        }\n        this.block.position = pos\n        let v = (this.block.position.x - this.leftNode.position.x) / this._leftW\n        this.setValue(v)\n    }\n\n    private setValue(value: number) {\n        this.value = value\n        this.leftNode.getComponent(UITransform).width = this._leftW * value\n        this.rightNode.getComponent(UITransform).width = this._rightW * (1 - value)\n    }\n}\n","/*\n * @Author: Blues\n * @Date: 2021-11-26 22:06:07\n * @LastEditTime: 2021-11-26 22:32:02\n * @LastEditors: Blues\n * @Description:\n */\n\nimport { assetManager, resources, SpriteFrame } from 'cc'\nimport BaseCache from './BaseCache'\n\nexport default class SpriteFrameCache extends BaseCache {\n    public get data(): SpriteFrame {\n        return this._data as SpriteFrame\n    }\n\n    protected addRef() {\n        this.data && this.data.addRef()\n    }\n\n    protected decRef() {\n        this.data && this.data.decRef()\n    }\n\n    public get refCount(): number {\n        return this.data == null ? 0 : this.data.refCount\n    }\n\n    /**\n     * 实际销毁，从内存中清除\n     */\n    public destroy(): void {\n        if (this._data != null && this._data instanceof SpriteFrame) {\n            resources.release(this._finalURL, SpriteFrame)\n            // assetManager.releaseAsset(this._data)\n            this._data.destroy()\n            this._data = null\n        }\n        this._isDisposed = true\n    }\n}\n","import { MaouEvent } from '../../event/MaouEvent'\nimport { classname } from '../../util/Decorators'\n\nclassname('TaskEvent')\nexport default class TaskEvent extends MaouEvent {\n    /** 加载任务完成 */\n    public static FINISH = 'TaskEvent.FINISH'\n}\n","/*\n * @Author: Blues\n * @Date: 2021-11-14 13:23:16\n * @LastEditTime: 2021-11-14 13:24:26\n * @LastEditors: Blues\n * @Description:\n */\nexport class Utils {\n    /** @private */\n    protected static _extReg: RegExp = /* [STATIC SAFE]*/ /\\.(\\w+)\\??/g\n\n    public static getPath(path: string): string {\n        let result: Array<string> = path.split('.')\n        if (result) {\n            return result[0]\n        }\n        return null\n    }\n\n    public static getFileExtension(path: string): string {\n        this._extReg.lastIndex = path.lastIndexOf('.')\n        let result: Array<any> = this._extReg.exec(path)\n        if (result && result.length > 1) {\n            return result[1].toLowerCase()\n        }\n        return null\n    }\n}\n","export class ValueManager {\n    public curItemId = ''\n    private _valueMap: Map<string, any> = new Map()\n\n    get(key: string): any {\n        return this._valueMap.get(key)\n    }\n\n    set(key: string, value: any): void {\n        this._valueMap.set(key, value)\n    }\n\n    setBoardFlag(boardSectionId: string, itemId: string, flag: boolean) {\n        console.log(`[ValueManager] setBoardFlag: boardSectionId:${boardSectionId}, itemId:${itemId}, flag:${flag}`)\n        let board = this._valueMap.get(boardSectionId)\n        if (board == null) {\n            board = {}\n            this._valueMap.set(boardSectionId, board)\n        }\n        board[itemId] = flag\n    }\n\n    getBoardFlag(boardSectionId: string, itemId: string): boolean {\n        let board = this._valueMap.get(boardSectionId)\n        if (board == null) {\n            board = {}\n            this._valueMap.set(boardSectionId, board)\n        }\n        return board[itemId] == true\n    }\n\n    clearBoardFlag(boardSectionId: string) {\n        this._valueMap.set(boardSectionId, null)\n    }\n}\n","import { assetManager, resources, SpriteFrame, VideoClip } from 'cc'\nimport BaseCache from './BaseCache'\n\nexport default class VideoCache extends BaseCache {\n    public get data(): VideoClip {\n        return this._data as VideoClip\n    }\n\n    protected addRef() {\n        this.data && this.data.addRef()\n    }\n\n    protected decRef() {\n        this.data && this.data.decRef()\n    }\n\n    public get refCount(): number {\n        return this.data == null ? 0 : this.data.refCount\n    }\n\n    /**\n     * 实际销毁，从内存中清除\n     */\n    public destroy(): void {\n        if (this._data != null && this._data instanceof VideoClip) {\n            resources.release(this._finalURL, VideoClip)\n            // assetManager.releaseAsset(this._data)\n            this._data.destroy()\n            this._data = null\n        }\n        this._isDisposed = true\n    }\n}\n","import { resources, SpriteFrame, VideoClip } from 'cc'\nimport { ILoader } from './ILoader'\nimport LoaderVO from './LoaderVO'\n\nexport default class VideoLoader implements ILoader {\n    load(vo: LoaderVO) {\n        vo.finalLoadURL = vo.path\n        resources.load(\n            vo.finalLoadURL,\n            VideoClip,\n            (finished, total) => {\n                vo.setProgress(finished / total)\n            },\n            (err, content) => {\n                if (err != null) {\n                    console.error('[videoLoader]', err)\n                    vo.fail(err)\n                } else {\n                    vo.complete(content)\n                }\n            }\n        )\n    }\n}\n","import { VideoPlayer, _decorator } from 'cc'\nimport { VideoSectionVO } from '../data/SectionVO'\nimport { GameManager } from '../manager/GameManager'\nimport { AssetManager } from '../maou/asset/AssetManager'\nimport VideoCache from '../maou/asset/cache/VideoCache'\n// import { VideoSectionVO } from '../data/SectionVO'\nimport { BaseSectionComponent } from './BaseSectionComponent'\nconst { ccclass, property } = _decorator\n\n@ccclass('VideoSectionComponent')\nexport class VideoSectionComponent extends BaseSectionComponent {\n    @property(VideoPlayer)\n    videoPlayer: VideoPlayer = null\n\n    // private _videoCache: VideoCache = null\n\n    get data(): VideoSectionVO {\n        return this._vo as VideoSectionVO\n    }\n\n    onLoaded() {\n        // this._videoCache = AssetManager.me.cache.getVideo(this.data.resource[0])\n        this.videoPlayer.remoteURL = this.data.videoPath\n    }\n\n    run() {\n        // this.videoPlayer.clip = this._videoCache.data\n        this.videoPlayer.play()\n        const self = this\n        GameManager.me.showHtmlNextBtn(() => {\n            GameManager.me.hideHtmlNextBtn()\n            self.clickNext()\n        })\n    }\n\n    dispose() {\n        // if (this._videoCache) {\n        //     this._videoCache.dispose()\n        //     this._videoCache = null\n        // }\n    }\n\n    onVideoPlayerEvent(player, status) {\n        console.log(status)\n        // if (status == VideoPlayer.EventType.READY_TO_PLAY || status == VideoPlayer.EventType.COMPLETED) {\n        //     player.play()\n        // }\n        if (status == VideoPlayer.EventType.READY_TO_PLAY) {\n            player.play()\n        }\n    }\n}\n"]}